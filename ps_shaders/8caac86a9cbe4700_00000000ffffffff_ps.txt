#version 420
#extension GL_ARB_texture_gather : enable
#extension GL_ARB_separate_shader_objects : enable
// shader 8caac86a9cbe4700
uniform ivec4 uf_remappedPS[1];
layout(location = 0) in vec4 passParameterSem0;
layout(location = 0) out vec4 passPixelColor0;
layout(location = 1) out vec4 passPixelColor1;
layout(location = 2) out vec4 passPixelColor2;
layout(location = 3) out vec4 passPixelColor3;
layout(location = 4) out vec4 passPixelColor4;
layout(location = 5) out vec4 passPixelColor5;
layout(location = 6) out vec4 passPixelColor6;
layout(location = 7) out vec4 passPixelColor7;
uniform vec2 uf_fragCoordScale;
int clampFI32(int v)
{
if( v == 0x7FFFFFFF )
	return floatBitsToInt(1.0);
else if( v == 0xFFFFFFFF )
	return floatBitsToInt(0.0);
return floatBitsToInt(clamp(intBitsToFloat(v), 0.0, 1.0));
}
float mul_nonIEEE(float a, float b){ if( a == 0.0 || b == 0.0 ) return 0.0; return a*b; }
void main()
{
ivec4 R0i = ivec4(0);
ivec4 R1i = ivec4(0);
ivec4 R2i = ivec4(0);
ivec4 R3i = ivec4(0);
ivec4 R4i = ivec4(0);
ivec4 R5i = ivec4(0);
ivec4 R6i = ivec4(0);
ivec4 R7i = ivec4(0);
ivec4 R8i = ivec4(0);
ivec4 R9i = ivec4(0);
ivec4 R10i = ivec4(0);
ivec4 R11i = ivec4(0);
ivec4 R12i = ivec4(0);
ivec4 R13i = ivec4(0);
ivec4 R14i = ivec4(0);
ivec4 R15i = ivec4(0);
ivec4 R16i = ivec4(0);
ivec4 R17i = ivec4(0);
ivec4 R18i = ivec4(0);
ivec4 R19i = ivec4(0);
ivec4 R20i = ivec4(0);
ivec4 R21i = ivec4(0);
ivec4 R22i = ivec4(0);
ivec4 R23i = ivec4(0);
ivec4 R24i = ivec4(0);
ivec4 R25i = ivec4(0);
ivec4 R26i = ivec4(0);
ivec4 R27i = ivec4(0);
ivec4 R28i = ivec4(0);
ivec4 R29i = ivec4(0);
ivec4 R30i = ivec4(0);
ivec4 R31i = ivec4(0);
ivec4 R32i = ivec4(0);
ivec4 R33i = ivec4(0);
ivec4 R34i = ivec4(0);
ivec4 R35i = ivec4(0);
ivec4 R36i = ivec4(0);
ivec4 R37i = ivec4(0);
ivec4 R38i = ivec4(0);
ivec4 R39i = ivec4(0);
ivec4 R40i = ivec4(0);
ivec4 R41i = ivec4(0);
ivec4 R42i = ivec4(0);
ivec4 R43i = ivec4(0);
ivec4 R44i = ivec4(0);
ivec4 R45i = ivec4(0);
ivec4 R46i = ivec4(0);
ivec4 R47i = ivec4(0);
ivec4 R48i = ivec4(0);
ivec4 R49i = ivec4(0);
ivec4 R50i = ivec4(0);
ivec4 R51i = ivec4(0);
ivec4 R52i = ivec4(0);
ivec4 R53i = ivec4(0);
ivec4 R54i = ivec4(0);
ivec4 R55i = ivec4(0);
ivec4 R56i = ivec4(0);
ivec4 R57i = ivec4(0);
ivec4 R58i = ivec4(0);
ivec4 R59i = ivec4(0);
ivec4 R60i = ivec4(0);
ivec4 R61i = ivec4(0);
ivec4 R62i = ivec4(0);
ivec4 R63i = ivec4(0);
ivec4 R64i = ivec4(0);
ivec4 R65i = ivec4(0);
ivec4 R66i = ivec4(0);
ivec4 R67i = ivec4(0);
ivec4 R68i = ivec4(0);
ivec4 R69i = ivec4(0);
ivec4 R70i = ivec4(0);
ivec4 R71i = ivec4(0);
ivec4 R72i = ivec4(0);
ivec4 R73i = ivec4(0);
ivec4 R74i = ivec4(0);
ivec4 R75i = ivec4(0);
ivec4 R76i = ivec4(0);
ivec4 R77i = ivec4(0);
ivec4 R78i = ivec4(0);
ivec4 R79i = ivec4(0);
ivec4 R80i = ivec4(0);
ivec4 R81i = ivec4(0);
ivec4 R82i = ivec4(0);
ivec4 R83i = ivec4(0);
ivec4 R84i = ivec4(0);
ivec4 R85i = ivec4(0);
ivec4 R86i = ivec4(0);
ivec4 R87i = ivec4(0);
ivec4 R88i = ivec4(0);
ivec4 R89i = ivec4(0);
ivec4 R90i = ivec4(0);
ivec4 R91i = ivec4(0);
ivec4 R92i = ivec4(0);
ivec4 R93i = ivec4(0);
ivec4 R94i = ivec4(0);
ivec4 R95i = ivec4(0);
ivec4 R96i = ivec4(0);
ivec4 R97i = ivec4(0);
ivec4 R98i = ivec4(0);
ivec4 R99i = ivec4(0);
ivec4 R100i = ivec4(0);
ivec4 R101i = ivec4(0);
ivec4 R102i = ivec4(0);
ivec4 R103i = ivec4(0);
ivec4 R104i = ivec4(0);
ivec4 R105i = ivec4(0);
ivec4 R106i = ivec4(0);
ivec4 R107i = ivec4(0);
ivec4 R108i = ivec4(0);
ivec4 R109i = ivec4(0);
ivec4 R110i = ivec4(0);
ivec4 R111i = ivec4(0);
ivec4 R112i = ivec4(0);
ivec4 R113i = ivec4(0);
ivec4 R114i = ivec4(0);
ivec4 R115i = ivec4(0);
ivec4 R116i = ivec4(0);
ivec4 R117i = ivec4(0);
ivec4 R118i = ivec4(0);
ivec4 R119i = ivec4(0);
ivec4 R120i = ivec4(0);
ivec4 R121i = ivec4(0);
ivec4 R122i = ivec4(0);
ivec4 R123i = ivec4(0);
ivec4 R124i = ivec4(0);
ivec4 R125i = ivec4(0);
ivec4 R126i = ivec4(0);
ivec4 R127i = ivec4(0);
int backupReg0i, backupReg1i, backupReg2i, backupReg3i, backupReg4i;
ivec4 PV0i = ivec4(0), PV1i = ivec4(0);
int PS0i = 0, PS1i = 0;
ivec4 tempi = ivec4(0);
float tempResultf;
int tempResulti;
ivec4 ARi = ivec4(0);
bool predResult = true;
vec3 cubeMapSTM;
int cubeMapFaceId;
R0i = floatBitsToInt(passParameterSem0);
// 0
R15i.x = floatBitsToInt(max(intBitsToFloat(R0i.x), intBitsToFloat(R0i.y)));
PV0i.x = R15i.x;
R16i.y = uf_remappedPS[0].x;
R16i.z = 0x3f800000;
R6i.w = floatBitsToInt(min(intBitsToFloat(R0i.x), intBitsToFloat(R0i.y)));
PV0i.w = R6i.w;
R17i.x = 0;
PS0i = R17i.x;
// 1
R1i.x = PS0i;
PV1i.y = floatBitsToInt(min(intBitsToFloat(PV0i.w), 0.0));
R7i.z = floatBitsToInt(max(intBitsToFloat(PV0i.x), 0.0));
PV1i.z = R7i.z;
R2i.w = floatBitsToInt(max(intBitsToFloat(PV0i.x), intBitsToFloat(0x3e124925)));
R17i.y = 0x3f800000;
PS1i = R17i.y;
// 2
R126i.x = floatBitsToInt(intBitsToFloat(PV1i.z) + -(intBitsToFloat(PV1i.y)));
PV0i.x = R126i.x;
R127i.y = floatBitsToInt(intBitsToFloat(R0i.y) + -(intBitsToFloat(PV1i.z)));
R127i.z = floatBitsToInt(intBitsToFloat(R0i.x) + -(intBitsToFloat(PV1i.z)));
R127i.w = floatBitsToInt(-(intBitsToFloat(PV1i.z)));
R1i.z = PS1i;
PS0i = R1i.z;
// 3
R3i.x = R17i.y;
R2i.y = R17i.x;
R2i.z = R17i.y;
R126i.w = floatBitsToInt(min(intBitsToFloat(R6i.w), intBitsToFloat(0x3e124925)));
PS1i = floatBitsToInt(1.0 / intBitsToFloat(PV0i.x));
// 4
backupReg0i = R127i.y;
backupReg1i = R127i.z;
R4i.x = R17i.y;
R127i.y = floatBitsToInt(mul_nonIEEE(intBitsToFloat(R127i.w), intBitsToFloat(PS1i)));
PV0i.y = R127i.y;
R127i.z = floatBitsToInt(mul_nonIEEE(intBitsToFloat(backupReg0i), intBitsToFloat(PS1i)));
PV0i.z = R127i.z;
R127i.w = floatBitsToInt(mul_nonIEEE(intBitsToFloat(backupReg1i), intBitsToFloat(PS1i)));
PV0i.w = R127i.w;
R3i.y = R17i.x;
PS0i = R3i.y;
// 5
PV1i.x = floatBitsToInt(intBitsToFloat(PV0i.y) + 2.0);
R126i.y = floatBitsToInt(floor(intBitsToFloat(PV0i.z)));
R126i.z = floatBitsToInt(floor(intBitsToFloat(PV0i.y)));
PV1i.w = floatBitsToInt(intBitsToFloat(PV0i.w) + 4.0);
R127i.x = floatBitsToInt(floor(intBitsToFloat(PV0i.w)));
PS1i = R127i.x;
// 6
PV0i.x = floatBitsToInt(intBitsToFloat(R127i.z) + -(intBitsToFloat(R127i.y)));
PV0i.y = floatBitsToInt(-(intBitsToFloat(R127i.w)) + intBitsToFloat(PV1i.x));
PV0i.z = floatBitsToInt(-(intBitsToFloat(R127i.z)) + intBitsToFloat(PV1i.w));
R127i.w = 0x3e124925;
R4i.z = R17i.x;
PS0i = R4i.z;
// 7
backupReg0i = R126i.z;
tempi.x = floatBitsToInt(dot(vec4(intBitsToFloat(R127i.x),intBitsToFloat(R126i.y),intBitsToFloat(backupReg0i),intBitsToFloat(R16i.y)),vec4(intBitsToFloat(PV0i.x),intBitsToFloat(PV0i.y),intBitsToFloat(PV0i.z),intBitsToFloat(R16i.z))));
PV1i.x = tempi.x;
PV1i.y = tempi.x;
PV1i.z = tempi.x;
PV1i.w = tempi.x;
R126i.z = tempi.x;
R5i.y = R17i.y;
PS1i = R5i.y;
// 8
backupReg0i = R127i.w;
R9i.x = floatBitsToInt(intBitsToFloat(R2i.w) + -(intBitsToFloat(R126i.w)));
PV0i.x = R9i.x;
PV0i.y = floatBitsToInt(intBitsToFloat(PV1i.x) + -(intBitsToFloat(0x40c00000)));
R5i.z = R17i.x;
R127i.w = floatBitsToInt(intBitsToFloat(R0i.x) + -(intBitsToFloat(R2i.w)));
R126i.y = floatBitsToInt(intBitsToFloat(backupReg0i) + -(intBitsToFloat(R2i.w)));
PS0i = R126i.y;
// 9
R123i.x = floatBitsToInt((intBitsToFloat(PV0i.y) * intBitsToFloat(0x3e2aaaab) + 1.0));
PV1i.x = R123i.x;
R8i.y = floatBitsToInt(mul_nonIEEE(intBitsToFloat(R126i.x), intBitsToFloat(uf_remappedPS[0].y)));
PV1i.z = floatBitsToInt(intBitsToFloat(R0i.y) + -(intBitsToFloat(R2i.w)));
R3i.w = floatBitsToInt(max(intBitsToFloat(R15i.x), intBitsToFloat(0x3e924925)));
PS1i = floatBitsToInt(1.0 / intBitsToFloat(PV0i.x));
// 10
backupReg0i = R126i.y;
R126i.x = floatBitsToInt(mul_nonIEEE(intBitsToFloat(R127i.w), intBitsToFloat(PS1i)));
PV0i.x = R126i.x;
R126i.y = floatBitsToInt(mul_nonIEEE(intBitsToFloat(backupReg0i), intBitsToFloat(PS1i)));
PV0i.y = R126i.y;
R127i.z = floatBitsToInt(mul_nonIEEE(intBitsToFloat(PV1i.z), intBitsToFloat(PS1i)));
PV0i.z = R127i.z;
PV0i.w = floatBitsToInt(floor(intBitsToFloat(PV1i.x)));
R10i.x = R17i.x;
PS0i = R10i.x;
// 11
backupReg0i = R126i.z;
PV1i.x = floatBitsToInt(intBitsToFloat(PV0i.x) + 4.0);
R6i.y = floatBitsToInt(floor(intBitsToFloat(PV0i.z)));
R126i.z = floatBitsToInt((-(intBitsToFloat(PV0i.w)) * intBitsToFloat(0x40c00000) + intBitsToFloat(backupReg0i)));
PV1i.z = R126i.z;
PV1i.w = floatBitsToInt(intBitsToFloat(PV0i.y) + 2.0);
R7i.x = floatBitsToInt(floor(intBitsToFloat(PV0i.x)));
PS1i = R7i.x;
// 12
R8i.x = floatBitsToInt(intBitsToFloat(R127i.z) + -(intBitsToFloat(R126i.y)));
R7i.y = floatBitsToInt(-(intBitsToFloat(R126i.x)) + intBitsToFloat(PV1i.w));
R0i.z = floatBitsToInt(floor(intBitsToFloat(R126i.y)));
PV0i.w = floatBitsToInt(floor(intBitsToFloat(PV1i.z)));
R6i.z = floatBitsToInt(-(intBitsToFloat(R127i.z)) + intBitsToFloat(PV1i.x));
PS0i = R6i.z;
// 13
R12i.x = R17i.y;
R11i.y = R17i.x;
R10i.z = R17i.y;
PV1i.w = floatBitsToInt(intBitsToFloat(R126i.z) + -(intBitsToFloat(PV0i.w)));
R6i.x = int(intBitsToFloat(PV0i.w));
PS1i = R6i.x;
// 14
R13i.x = R17i.y;
R12i.y = R17i.x;
R17i.z = PV1i.w;
PV0i.z = R17i.z;
R127i.w = floatBitsToInt(-(intBitsToFloat(PV1i.w)) + 1.0);
PV0i.w = R127i.w;
R11i.z = R17i.y;
PS0i = R11i.z;
// 15
R2i.x = PV0i.z;
R1i.y = PV0i.w;
R3i.z = PV0i.w;
R0i.w = floatBitsToInt(min(intBitsToFloat(R6i.w), intBitsToFloat(0x3e924925)));
R4i.y = PV0i.z;
PS1i = R4i.y;
// 16
R5i.x = R127i.w;
R14i.y = R17i.y;
R13i.z = R17i.x;
R1i.w = 0x3e924925;
R14i.z = R17i.x;
PS0i = R14i.z;
// 17
R26i.xyz = ivec3(R1i.x,R1i.y,R1i.z);
// 18
R27i.xyz = ivec3(R2i.x,R2i.y,R2i.z);
// 19
R28i.xyz = ivec3(R3i.x,R3i.y,R3i.z);
// 20
R29i.xyz = ivec3(R4i.x,R4i.y,R4i.z);
// 21
R30i.xyz = ivec3(R5i.x,R5i.y,R5i.z);
// 22
R31i.xyz = ivec3(R17i.x,R17i.y,R17i.z);
// 23
tempResulti = R6i.x;
tempResulti = clamp(tempResulti, -256, 255);
ARi.x = tempResulti;
PV1i.x = tempResulti;
// 24
R5i.xyz = ivec3(((ARi.x==0)?R26i.x:(ARi.x==1)?R27i.x:(ARi.x==2)?R28i.x:(ARi.x==3)?R29i.x:(ARi.x==4)?R30i.x:(ARi.x==5)?R31i.x:(ARi.x==6)?R32i.x:(ARi.x==7)?R33i.x:(ARi.x==8)?R34i.x:(ARi.x==9)?R35i.x:(ARi.x==10)?R36i.x:(ARi.x==11)?R37i.x:(ARi.x==12)?R38i.x:(ARi.x==14)?R40i.x:(ARi.x==15)?R41i.x:(ARi.x==16)?R42i.x:(ARi.x==17)?R43i.x:(ARi.x==18)?R44i.x:(ARi.x==19)?R45i.x:(ARi.x==20)?R46i.x:(ARi.x==21)?R47i.x:(ARi.x==96)?R122i.x:(ARi.x==97)?R123i.x:(ARi.x==98)?R124i.x:(ARi.x==99)?R125i.x:(ARi.x==100)?R126i.x:(ARi.x==101)?R127i.x:0),((ARi.x==0)?R26i.y:(ARi.x==1)?R27i.y:(ARi.x==2)?R28i.y:(ARi.x==3)?R29i.y:(ARi.x==4)?R30i.y:(ARi.x==5)?R31i.y:(ARi.x==6)?R32i.y:(ARi.x==7)?R33i.y:(ARi.x==8)?R34i.y:(ARi.x==9)?R35i.y:(ARi.x==10)?R36i.y:(ARi.x==11)?R37i.y:(ARi.x==12)?R38i.y:(ARi.x==14)?R40i.y:(ARi.x==15)?R41i.y:(ARi.x==16)?R42i.y:(ARi.x==17)?R43i.y:(ARi.x==18)?R44i.y:(ARi.x==19)?R45i.y:(ARi.x==20)?R46i.y:(ARi.x==21)?R47i.y:(ARi.x==96)?R122i.y:(ARi.x==97)?R123i.y:(ARi.x==98)?R124i.y:(ARi.x==99)?R125i.y:(ARi.x==100)?R126i.y:(ARi.x==101)?R127i.y:0),((ARi.x==0)?R26i.z:(ARi.x==1)?R27i.z:(ARi.x==2)?R28i.z:(ARi.x==3)?R29i.z:(ARi.x==4)?R30i.z:(ARi.x==5)?R31i.z:(ARi.x==6)?R32i.z:(ARi.x==7)?R33i.z:(ARi.x==8)?R34i.z:(ARi.x==9)?R35i.z:(ARi.x==10)?R36i.z:(ARi.x==11)?R37i.z:(ARi.x==12)?R38i.z:(ARi.x==14)?R40i.z:(ARi.x==15)?R41i.z:(ARi.x==16)?R42i.z:(ARi.x==17)?R43i.z:(ARi.x==18)?R44i.z:(ARi.x==19)?R45i.z:(ARi.x==20)?R46i.z:(ARi.x==21)?R47i.z:(ARi.x==96)?R122i.z:(ARi.x==97)?R123i.z:(ARi.x==98)?R124i.z:(ARi.x==99)?R125i.z:(ARi.x==100)?R126i.z:(ARi.x==101)?R127i.z:0));
// 0
backupReg0i = R0i.z;
tempi.x = floatBitsToInt(dot(vec4(intBitsToFloat(R7i.x),intBitsToFloat(R6i.y),intBitsToFloat(backupReg0i),intBitsToFloat(R16i.y)),vec4(intBitsToFloat(R8i.x),intBitsToFloat(R7i.y),intBitsToFloat(R6i.z),intBitsToFloat(R16i.z))));
PV0i.x = tempi.x;
PV0i.y = tempi.x;
PV0i.z = tempi.x;
PV0i.w = tempi.x;
R126i.w = tempi.x;
R6i.x = R17i.x;
PS0i = R6i.x;
// 1
R123i.x = floatBitsToInt((mul_nonIEEE(-(intBitsToFloat(R8i.y)),intBitsToFloat(R5i.y)) + intBitsToFloat(R7i.z)));
PV1i.x = R123i.x;
PV1i.y = floatBitsToInt(intBitsToFloat(PV0i.x) + -(intBitsToFloat(0x40c00000)));
R123i.z = floatBitsToInt((mul_nonIEEE(-(intBitsToFloat(R8i.y)),intBitsToFloat(R5i.z)) + intBitsToFloat(R7i.z)));
PV1i.z = R123i.z;
R123i.w = floatBitsToInt((mul_nonIEEE(-(intBitsToFloat(R8i.y)),intBitsToFloat(R5i.x)) + intBitsToFloat(R7i.z)));
PV1i.w = R123i.w;
R6i.y = R17i.y;
PS1i = R6i.y;
// 2
backupReg0i = R0i.w;
R126i.x = floatBitsToInt(mul_nonIEEE(intBitsToFloat(PV1i.z), intBitsToFloat(uf_remappedPS[0].z)));
R126i.x = clampFI32(R126i.x);
PV0i.y = floatBitsToInt(mul_nonIEEE(intBitsToFloat(PV1i.w), intBitsToFloat(uf_remappedPS[0].z)));
PV0i.y = clampFI32(PV0i.y);
R123i.z = floatBitsToInt((intBitsToFloat(PV1i.y) * intBitsToFloat(0x3e2aaaab) + 1.0));
PV0i.z = R123i.z;
R127i.w = floatBitsToInt(mul_nonIEEE(intBitsToFloat(PV1i.x), intBitsToFloat(uf_remappedPS[0].z)));
R127i.w = clampFI32(R127i.w);
R0i.w = floatBitsToInt(intBitsToFloat(R3i.w) + -(intBitsToFloat(backupReg0i)));
PS0i = R0i.w;
// 3
R7i.x = floatBitsToInt(intBitsToFloat(R1i.w) + -(intBitsToFloat(R3i.w)));
R5i.y = floatBitsToInt(intBitsToFloat(R0i.y) + -(intBitsToFloat(R3i.w)));
R5i.z = floatBitsToInt(intBitsToFloat(R0i.x) + -(intBitsToFloat(R3i.w)));
PV1i.w = floatBitsToInt(floor(intBitsToFloat(PV0i.z)));
tempResultf = log2(intBitsToFloat(PV0i.y));
if( isinf(tempResultf) == true ) tempResultf = -3.40282347E+38F;
PS1i = floatBitsToInt(tempResultf);
// 4
R5i.x = floatBitsToInt(mul_nonIEEE(intBitsToFloat(R9i.x), intBitsToFloat(uf_remappedPS[0].y)));
R126i.y = floatBitsToInt(mul_nonIEEE(intBitsToFloat(PS1i), intBitsToFloat(uf_remappedPS[0].w)));
R126i.z = floatBitsToInt((-(intBitsToFloat(PV1i.w)) * intBitsToFloat(0x40c00000) + intBitsToFloat(R126i.w)));
PV0i.z = R126i.z;
R5i.w = floatBitsToInt(max(intBitsToFloat(R15i.x), intBitsToFloat(0x3edb6db8)));
tempResultf = log2(intBitsToFloat(R127i.w));
if( isinf(tempResultf) == true ) tempResultf = -3.40282347E+38F;
PS0i = floatBitsToInt(tempResultf);
// 5
R8i.x = R17i.x;
R127i.y = floatBitsToInt(floor(intBitsToFloat(PV0i.z)));
PV1i.y = R127i.y;
R127i.z = floatBitsToInt(mul_nonIEEE(intBitsToFloat(PS0i), intBitsToFloat(uf_remappedPS[0].w)));
R126i.w = floatBitsToInt(min(intBitsToFloat(R6i.w), intBitsToFloat(0x3edb6db8)));
tempResultf = log2(intBitsToFloat(R126i.x));
if( isinf(tempResultf) == true ) tempResultf = -3.40282347E+38F;
PS1i = floatBitsToInt(tempResultf);
// 6
R126i.x = floatBitsToInt(mul_nonIEEE(intBitsToFloat(PS1i), intBitsToFloat(uf_remappedPS[0].w)));
R4i.y = R17i.x;
R8i.z = R17i.y;
PV0i.w = floatBitsToInt(intBitsToFloat(R126i.z) + -(intBitsToFloat(PV1i.y)));
PS0i = floatBitsToInt(exp2(intBitsToFloat(R126i.y)));
// 7
R127i.x = PV0i.w;
PV1i.y = floatBitsToInt(max(intBitsToFloat(PS0i), 0.0));
R4i.z = R17i.y;
R127i.w = floatBitsToInt(-(intBitsToFloat(PV0i.w)) + 1.0);
PV1i.w = R127i.w;
PS1i = floatBitsToInt(exp2(intBitsToFloat(R127i.z)));
// 8
R19i.x = floatBitsToInt(min(intBitsToFloat(PV1i.y), 1.0));
R10i.y = PV1i.w;
R12i.z = PV1i.w;
PV0i.w = floatBitsToInt(max(intBitsToFloat(PS1i), 0.0));
PS0i = floatBitsToInt(exp2(intBitsToFloat(R126i.x)));
// 9
PV1i.x = floatBitsToInt(max(intBitsToFloat(PS0i), 0.0));
R19i.y = floatBitsToInt(min(intBitsToFloat(PV0i.w), 1.0));
R6i.z = R127i.x;
R1i.w = 0x3edb6db8;
R11i.x = R127i.x;
PS1i = R11i.x;
// 10
R14i.x = R127i.w;
R13i.y = R127i.x;
R19i.z = floatBitsToInt(min(intBitsToFloat(PV1i.x), 1.0));
R4i.w = floatBitsToInt(intBitsToFloat(R5i.w) + -(intBitsToFloat(R126i.w)));
R9i.x = int(intBitsToFloat(R127i.y));
PS0i = R9i.x;
// 11
R32i.xyz = ivec3(R19i.x,R19i.y,R19i.z);
// 12
R26i.xyz = ivec3(R10i.x,R10i.y,R10i.z);
// 13
R27i.xyz = ivec3(R11i.x,R11i.y,R11i.z);
// 14
R28i.xyz = ivec3(R12i.x,R12i.y,R12i.z);
// 15
R29i.xyz = ivec3(R13i.x,R13i.y,R13i.z);
// 16
R30i.xyz = ivec3(R14i.x,R14i.y,R14i.z);
// 17
R31i.xyz = ivec3(R6i.x,R6i.y,R6i.z);
// 18
tempResulti = R9i.x;
tempResulti = clamp(tempResulti, -256, 255);
ARi.x = tempResulti;
PV0i.x = tempResulti;
// 19
R9i.xyz = ivec3(((ARi.x==0)?R26i.x:(ARi.x==1)?R27i.x:(ARi.x==2)?R28i.x:(ARi.x==3)?R29i.x:(ARi.x==4)?R30i.x:(ARi.x==5)?R31i.x:(ARi.x==6)?R32i.x:(ARi.x==7)?R33i.x:(ARi.x==8)?R34i.x:(ARi.x==9)?R35i.x:(ARi.x==10)?R36i.x:(ARi.x==11)?R37i.x:(ARi.x==12)?R38i.x:(ARi.x==14)?R40i.x:(ARi.x==15)?R41i.x:(ARi.x==16)?R42i.x:(ARi.x==17)?R43i.x:(ARi.x==18)?R44i.x:(ARi.x==19)?R45i.x:(ARi.x==20)?R46i.x:(ARi.x==21)?R47i.x:(ARi.x==96)?R122i.x:(ARi.x==97)?R123i.x:(ARi.x==98)?R124i.x:(ARi.x==99)?R125i.x:(ARi.x==100)?R126i.x:(ARi.x==101)?R127i.x:0),((ARi.x==0)?R26i.y:(ARi.x==1)?R27i.y:(ARi.x==2)?R28i.y:(ARi.x==3)?R29i.y:(ARi.x==4)?R30i.y:(ARi.x==5)?R31i.y:(ARi.x==6)?R32i.y:(ARi.x==7)?R33i.y:(ARi.x==8)?R34i.y:(ARi.x==9)?R35i.y:(ARi.x==10)?R36i.y:(ARi.x==11)?R37i.y:(ARi.x==12)?R38i.y:(ARi.x==14)?R40i.y:(ARi.x==15)?R41i.y:(ARi.x==16)?R42i.y:(ARi.x==17)?R43i.y:(ARi.x==18)?R44i.y:(ARi.x==19)?R45i.y:(ARi.x==20)?R46i.y:(ARi.x==21)?R47i.y:(ARi.x==96)?R122i.y:(ARi.x==97)?R123i.y:(ARi.x==98)?R124i.y:(ARi.x==99)?R125i.y:(ARi.x==100)?R126i.y:(ARi.x==101)?R127i.y:0),((ARi.x==0)?R26i.z:(ARi.x==1)?R27i.z:(ARi.x==2)?R28i.z:(ARi.x==3)?R29i.z:(ARi.x==4)?R30i.z:(ARi.x==5)?R31i.z:(ARi.x==6)?R32i.z:(ARi.x==7)?R33i.z:(ARi.x==8)?R34i.z:(ARi.x==9)?R35i.z:(ARi.x==10)?R36i.z:(ARi.x==11)?R37i.z:(ARi.x==12)?R38i.z:(ARi.x==14)?R40i.z:(ARi.x==15)?R41i.z:(ARi.x==16)?R42i.z:(ARi.x==17)?R43i.z:(ARi.x==18)?R44i.z:(ARi.x==19)?R45i.z:(ARi.x==20)?R46i.z:(ARi.x==21)?R47i.z:(ARi.x==96)?R122i.z:(ARi.x==97)?R123i.z:(ARi.x==98)?R124i.z:(ARi.x==99)?R125i.z:(ARi.x==100)?R126i.z:(ARi.x==101)?R127i.z:0));
// 0
backupReg0i = R9i.x;
R9i.x = R17i.y;
R126i.y = floatBitsToInt((mul_nonIEEE(-(intBitsToFloat(R5i.x)),intBitsToFloat(R9i.z)) + intBitsToFloat(R2i.w)));
R123i.z = floatBitsToInt((mul_nonIEEE(-(intBitsToFloat(R5i.x)),intBitsToFloat(R9i.y)) + intBitsToFloat(R2i.w)));
PV0i.z = R123i.z;
R123i.w = floatBitsToInt((mul_nonIEEE(-(intBitsToFloat(R5i.x)),intBitsToFloat(backupReg0i)) + intBitsToFloat(R2i.w)));
PV0i.w = R123i.w;
PS0i = floatBitsToInt(1.0 / intBitsToFloat(R0i.w));
// 1
R127i.x = floatBitsToInt(mul_nonIEEE(intBitsToFloat(R7i.x), intBitsToFloat(PS0i)));
PV1i.x = R127i.x;
R127i.y = floatBitsToInt(mul_nonIEEE(intBitsToFloat(R5i.y), intBitsToFloat(PS0i)));
PV1i.y = R127i.y;
R127i.z = floatBitsToInt(mul_nonIEEE(intBitsToFloat(R5i.z), intBitsToFloat(PS0i)));
PV1i.z = R127i.z;
R127i.w = floatBitsToInt(mul_nonIEEE(intBitsToFloat(PV0i.w), intBitsToFloat(uf_remappedPS[0].z)));
R127i.w = clampFI32(R127i.w);
R126i.w = floatBitsToInt(mul_nonIEEE(intBitsToFloat(PV0i.z), intBitsToFloat(uf_remappedPS[0].z)));
R126i.w = clampFI32(R126i.w);
PS1i = R126i.w;
// 2
PV0i.x = floatBitsToInt(intBitsToFloat(PV1i.z) + 4.0);
R125i.y = floatBitsToInt(floor(intBitsToFloat(PV1i.y)));
R126i.z = floatBitsToInt(floor(intBitsToFloat(PV1i.x)));
PV0i.w = floatBitsToInt(intBitsToFloat(PV1i.x) + 2.0);
R126i.x = floatBitsToInt(floor(intBitsToFloat(PV1i.z)));
PS0i = R126i.x;
// 3
backupReg0i = R127i.w;
PV1i.x = floatBitsToInt(intBitsToFloat(R127i.y) + -(intBitsToFloat(R127i.x)));
PV1i.y = floatBitsToInt(-(intBitsToFloat(R127i.z)) + intBitsToFloat(PV0i.w));
PV1i.z = floatBitsToInt(-(intBitsToFloat(R127i.y)) + intBitsToFloat(PV0i.x));
R127i.w = floatBitsToInt(mul_nonIEEE(intBitsToFloat(R126i.y), intBitsToFloat(uf_remappedPS[0].z)));
R127i.w = clampFI32(R127i.w);
tempResultf = log2(intBitsToFloat(backupReg0i));
if( isinf(tempResultf) == true ) tempResultf = -3.40282347E+38F;
R127i.y = floatBitsToInt(tempResultf);
PS1i = R127i.y;
// 4
tempi.x = floatBitsToInt(dot(vec4(intBitsToFloat(R126i.x),intBitsToFloat(R125i.y),intBitsToFloat(R126i.z),intBitsToFloat(R16i.y)),vec4(intBitsToFloat(PV1i.x),intBitsToFloat(PV1i.y),intBitsToFloat(PV1i.z),intBitsToFloat(R16i.z))));
PV0i.x = tempi.x;
PV0i.y = tempi.x;
PV0i.z = tempi.x;
PV0i.w = tempi.x;
R127i.z = tempi.x;
tempResultf = log2(intBitsToFloat(R126i.w));
if( isinf(tempResultf) == true ) tempResultf = -3.40282347E+38F;
PS0i = floatBitsToInt(tempResultf);
// 5
backupReg0i = R0i.x;
backupReg1i = R127i.w;
PV1i.x = floatBitsToInt(mul_nonIEEE(intBitsToFloat(R127i.y), intBitsToFloat(uf_remappedPS[0].w)));
PV1i.y = floatBitsToInt(intBitsToFloat(PV0i.x) + -(intBitsToFloat(0x40c00000)));
R126i.z = floatBitsToInt(mul_nonIEEE(intBitsToFloat(PS0i), intBitsToFloat(uf_remappedPS[0].w)));
R127i.w = floatBitsToInt(intBitsToFloat(backupReg0i) + -(intBitsToFloat(R5i.w)));
tempResultf = log2(intBitsToFloat(backupReg1i));
if( isinf(tempResultf) == true ) tempResultf = -3.40282347E+38F;
PS1i = floatBitsToInt(tempResultf);
// 6
R123i.x = floatBitsToInt((intBitsToFloat(PV1i.y) * intBitsToFloat(0x3e2aaaab) + 1.0));
PV0i.x = R123i.x;
R9i.y = R17i.x;
R125i.z = floatBitsToInt(mul_nonIEEE(intBitsToFloat(PS1i), intBitsToFloat(uf_remappedPS[0].w)));
R125i.w = floatBitsToInt(intBitsToFloat(R1i.w) + -(intBitsToFloat(R5i.w)));
PS0i = floatBitsToInt(exp2(intBitsToFloat(PV1i.x)));
// 7
PV1i.x = floatBitsToInt(max(intBitsToFloat(PS0i), 0.0));
R7i.y = R17i.y;
R5i.z = R17i.x;
PV1i.w = floatBitsToInt(floor(intBitsToFloat(PV0i.x)));
PS1i = floatBitsToInt(exp2(intBitsToFloat(R126i.z)));
// 8
backupReg0i = R127i.z;
R18i.x = floatBitsToInt(min(intBitsToFloat(PV1i.x), 1.0));
R6i.y = R17i.y;
R127i.z = floatBitsToInt((-(intBitsToFloat(PV1i.w)) * intBitsToFloat(0x40c00000) + intBitsToFloat(backupReg0i)));
PV0i.z = R127i.z;
PV0i.w = floatBitsToInt(max(intBitsToFloat(PS1i), 0.0));
PS0i = floatBitsToInt(exp2(intBitsToFloat(R125i.z)));
// 9
R5i.x = R17i.y;
PV1i.y = floatBitsToInt(floor(intBitsToFloat(PV0i.z)));
R7i.z = R17i.x;
PV1i.w = floatBitsToInt(max(intBitsToFloat(PS0i), 0.0));
R18i.y = floatBitsToInt(min(intBitsToFloat(PV0i.w), 1.0));
PS1i = R18i.y;
// 10
R6i.x = R17i.x;
R127i.y = floatBitsToInt(intBitsToFloat(R0i.y) + -(intBitsToFloat(R5i.w)));
R18i.z = floatBitsToInt(min(intBitsToFloat(PV1i.w), 1.0));
PV0i.w = floatBitsToInt(intBitsToFloat(R127i.z) + -(intBitsToFloat(PV1i.y)));
R14i.x = int(intBitsToFloat(PV1i.y));
PS0i = R14i.x;
// 11
R126i.x = PV0i.w;
PV1i.x = R126i.x;
R13i.y = floatBitsToInt(mul_nonIEEE(intBitsToFloat(R0i.w), intBitsToFloat(uf_remappedPS[0].y)));
R12i.z = R17i.y;
R126i.w = floatBitsToInt(-(intBitsToFloat(PV0i.w)) + 1.0);
PV1i.w = R126i.w;
R124i.w = floatBitsToInt(1.0 / intBitsToFloat(R4i.w));
PS1i = R124i.w;
// 12
R4i.x = PV1i.x;
R8i.y = PV1i.w;
R9i.z = PV1i.w;
R1i.w = floatBitsToInt(mul_nonIEEE(intBitsToFloat(R127i.w), intBitsToFloat(PS1i)));
PV0i.w = R1i.w;
R5i.y = PV1i.x;
PS0i = R5i.y;
// 13
R7i.x = R126i.w;
R14i.y = floatBitsToInt(mul_nonIEEE(intBitsToFloat(R127i.y), intBitsToFloat(R124i.w)));
R6i.z = R126i.x;
R0i.w = floatBitsToInt(mul_nonIEEE(intBitsToFloat(R125i.w), intBitsToFloat(R124i.w)));
R2i.w = floatBitsToInt(intBitsToFloat(PV0i.w) + 4.0);
PS1i = R2i.w;
// 14
R33i.xyz = ivec3(R18i.x,R18i.y,R18i.z);
// 15
R26i.xyz = ivec3(R8i.x,R8i.y,R8i.z);
// 16
R27i.xyz = ivec3(R4i.x,R4i.y,R4i.z);
// 17
R28i.xyz = ivec3(R9i.x,R9i.y,R9i.z);
// 18
R29i.xyz = ivec3(R5i.x,R5i.y,R5i.z);
// 19
R30i.xyz = ivec3(R7i.x,R7i.y,R7i.z);
// 20
R31i.xyz = ivec3(R6i.x,R6i.y,R6i.z);
// 21
tempResulti = R14i.x;
tempResulti = clamp(tempResulti, -256, 255);
ARi.x = tempResulti;
PV1i.x = tempResulti;
// 22
R6i.xyz = ivec3(((ARi.x==0)?R26i.x:(ARi.x==1)?R27i.x:(ARi.x==2)?R28i.x:(ARi.x==3)?R29i.x:(ARi.x==4)?R30i.x:(ARi.x==5)?R31i.x:(ARi.x==6)?R32i.x:(ARi.x==7)?R33i.x:(ARi.x==8)?R34i.x:(ARi.x==9)?R35i.x:(ARi.x==10)?R36i.x:(ARi.x==11)?R37i.x:(ARi.x==12)?R38i.x:(ARi.x==14)?R40i.x:(ARi.x==15)?R41i.x:(ARi.x==16)?R42i.x:(ARi.x==17)?R43i.x:(ARi.x==18)?R44i.x:(ARi.x==19)?R45i.x:(ARi.x==20)?R46i.x:(ARi.x==21)?R47i.x:(ARi.x==96)?R122i.x:(ARi.x==97)?R123i.x:(ARi.x==98)?R124i.x:(ARi.x==99)?R125i.x:(ARi.x==100)?R126i.x:(ARi.x==101)?R127i.x:0),((ARi.x==0)?R26i.y:(ARi.x==1)?R27i.y:(ARi.x==2)?R28i.y:(ARi.x==3)?R29i.y:(ARi.x==4)?R30i.y:(ARi.x==5)?R31i.y:(ARi.x==6)?R32i.y:(ARi.x==7)?R33i.y:(ARi.x==8)?R34i.y:(ARi.x==9)?R35i.y:(ARi.x==10)?R36i.y:(ARi.x==11)?R37i.y:(ARi.x==12)?R38i.y:(ARi.x==14)?R40i.y:(ARi.x==15)?R41i.y:(ARi.x==16)?R42i.y:(ARi.x==17)?R43i.y:(ARi.x==18)?R44i.y:(ARi.x==19)?R45i.y:(ARi.x==20)?R46i.y:(ARi.x==21)?R47i.y:(ARi.x==96)?R122i.y:(ARi.x==97)?R123i.y:(ARi.x==98)?R124i.y:(ARi.x==99)?R125i.y:(ARi.x==100)?R126i.y:(ARi.x==101)?R127i.y:0),((ARi.x==0)?R26i.z:(ARi.x==1)?R27i.z:(ARi.x==2)?R28i.z:(ARi.x==3)?R29i.z:(ARi.x==4)?R30i.z:(ARi.x==5)?R31i.z:(ARi.x==6)?R32i.z:(ARi.x==7)?R33i.z:(ARi.x==8)?R34i.z:(ARi.x==9)?R35i.z:(ARi.x==10)?R36i.z:(ARi.x==11)?R37i.z:(ARi.x==12)?R38i.z:(ARi.x==14)?R40i.z:(ARi.x==15)?R41i.z:(ARi.x==16)?R42i.z:(ARi.x==17)?R43i.z:(ARi.x==18)?R44i.z:(ARi.x==19)?R45i.z:(ARi.x==20)?R46i.z:(ARi.x==21)?R47i.z:(ARi.x==96)?R122i.z:(ARi.x==97)?R123i.z:(ARi.x==98)?R124i.z:(ARi.x==99)?R125i.z:(ARi.x==100)?R126i.z:(ARi.x==101)?R127i.z:0));
// 0
PV0i.x = floatBitsToInt(intBitsToFloat(R0i.w) + 2.0);
R127i.y = floatBitsToInt(floor(intBitsToFloat(R14i.y)));
R127i.z = floatBitsToInt(floor(intBitsToFloat(R0i.w)));
R126i.w = floatBitsToInt(floor(intBitsToFloat(R1i.w)));
R126i.x = floatBitsToInt(intBitsToFloat(R14i.y) + -(intBitsToFloat(R0i.w)));
PS0i = R126i.x;
// 1
R123i.x = floatBitsToInt((mul_nonIEEE(-(intBitsToFloat(R13i.y)),intBitsToFloat(R6i.x)) + intBitsToFloat(R3i.w)));
PV1i.x = R123i.x;
PV1i.y = floatBitsToInt(-(intBitsToFloat(R1i.w)) + intBitsToFloat(PV0i.x));
PV1i.z = floatBitsToInt(-(intBitsToFloat(R14i.y)) + intBitsToFloat(R2i.w));
R125i.w = floatBitsToInt((mul_nonIEEE(-(intBitsToFloat(R13i.y)),intBitsToFloat(R6i.y)) + intBitsToFloat(R3i.w)));
R125i.y = floatBitsToInt((mul_nonIEEE(-(intBitsToFloat(R13i.y)),intBitsToFloat(R6i.z)) + intBitsToFloat(R3i.w)));
PS1i = R125i.y;
// 2
tempi.x = floatBitsToInt(dot(vec4(intBitsToFloat(R126i.w),intBitsToFloat(R127i.y),intBitsToFloat(R127i.z),intBitsToFloat(R16i.y)),vec4(intBitsToFloat(R126i.x),intBitsToFloat(PV1i.y),intBitsToFloat(PV1i.z),intBitsToFloat(R16i.z))));
PV0i.x = tempi.x;
PV0i.y = tempi.x;
PV0i.z = tempi.x;
PV0i.w = tempi.x;
R125i.z = tempi.x;
PS0i = floatBitsToInt(mul_nonIEEE(intBitsToFloat(PV1i.x), intBitsToFloat(uf_remappedPS[0].z)));
PS0i = clampFI32(PS0i);
// 3
PV1i.x = floatBitsToInt(mul_nonIEEE(intBitsToFloat(R125i.w), intBitsToFloat(uf_remappedPS[0].z)));
PV1i.x = clampFI32(PV1i.x);
PV1i.y = floatBitsToInt(intBitsToFloat(PV0i.x) + -(intBitsToFloat(0x40c00000)));
R127i.z = floatBitsToInt(mul_nonIEEE(intBitsToFloat(R125i.y), intBitsToFloat(uf_remappedPS[0].z)));
R127i.z = clampFI32(R127i.z);
R0i.w = floatBitsToInt(max(intBitsToFloat(R15i.x), intBitsToFloat(0x3f124925)));
tempResultf = log2(intBitsToFloat(PS0i));
if( isinf(tempResultf) == true ) tempResultf = -3.40282347E+38F;
PS1i = floatBitsToInt(tempResultf);
// 4
R123i.x = floatBitsToInt((intBitsToFloat(PV1i.y) * intBitsToFloat(0x3e2aaaab) + 1.0));
PV0i.x = R123i.x;
R6i.y = R17i.x;
R6i.z = R17i.y;
R125i.w = floatBitsToInt(mul_nonIEEE(intBitsToFloat(PS1i), intBitsToFloat(uf_remappedPS[0].w)));
tempResultf = log2(intBitsToFloat(PV1i.x));
if( isinf(tempResultf) == true ) tempResultf = -3.40282347E+38F;
PS0i = floatBitsToInt(tempResultf);
// 5
R12i.x = R17i.x;
R125i.y = floatBitsToInt(mul_nonIEEE(intBitsToFloat(PS0i), intBitsToFloat(uf_remappedPS[0].w)));
R14i.z = R17i.x;
PV1i.w = floatBitsToInt(floor(intBitsToFloat(PV0i.x)));
tempResultf = log2(intBitsToFloat(R127i.z));
if( isinf(tempResultf) == true ) tempResultf = -3.40282347E+38F;
PS1i = floatBitsToInt(tempResultf);
// 6
backupReg0i = R125i.z;
R126i.x = floatBitsToInt(mul_nonIEEE(intBitsToFloat(PS1i), intBitsToFloat(uf_remappedPS[0].w)));
R13i.y = R17i.x;
R125i.z = floatBitsToInt((-(intBitsToFloat(PV1i.w)) * intBitsToFloat(0x40c00000) + intBitsToFloat(backupReg0i)));
PV0i.z = R125i.z;
R126i.w = floatBitsToInt(min(intBitsToFloat(R6i.w), intBitsToFloat(0x3f124925)));
PS0i = floatBitsToInt(exp2(intBitsToFloat(R125i.w)));
// 7
backupReg0i = R125i.y;
R13i.x = R17i.y;
R125i.y = floatBitsToInt(floor(intBitsToFloat(PV0i.z)));
PV1i.y = R125i.y;
R7i.z = R17i.x;
R125i.w = floatBitsToInt(max(intBitsToFloat(PS0i), 0.0));
PS1i = floatBitsToInt(exp2(intBitsToFloat(backupReg0i)));
// 8
PV0i.x = floatBitsToInt(max(intBitsToFloat(PS1i), 0.0));
R7i.y = R17i.y;
R127i.z = 0x3f124925;
PV0i.w = floatBitsToInt(intBitsToFloat(R125i.z) + -(intBitsToFloat(PV1i.y)));
PS0i = floatBitsToInt(exp2(intBitsToFloat(R126i.x)));
// 9
R1i.x = floatBitsToInt(min(intBitsToFloat(R125i.w), 1.0));
R1i.y = floatBitsToInt(min(intBitsToFloat(PV0i.x), 1.0));
R125i.z = floatBitsToInt(-(intBitsToFloat(PV0i.w)) + 1.0);
PV1i.z = R125i.z;
PV1i.w = floatBitsToInt(max(intBitsToFloat(PS0i), 0.0));
R125i.w = PV0i.w;
PS1i = R125i.w;
// 10
R6i.x = PS1i;
R12i.y = PV1i.z;
R1i.z = floatBitsToInt(min(intBitsToFloat(PV1i.w), 1.0));
R3i.w = floatBitsToInt(intBitsToFloat(R0i.w) + -(intBitsToFloat(R126i.w)));
R13i.z = PV1i.z;
PS0i = R13i.z;
// 11
R14i.x = R17i.y;
R14i.y = R125i.w;
R5i.z = R125i.w;
R1i.w = floatBitsToInt(intBitsToFloat(R0i.x) + -(intBitsToFloat(R0i.w)));
R7i.x = R125i.z;
PS1i = R7i.x;
// 12
R5i.x = R17i.x;
R5i.y = R17i.y;
R9i.z = floatBitsToInt(intBitsToFloat(R0i.y) + -(intBitsToFloat(R0i.w)));
R2i.w = floatBitsToInt(intBitsToFloat(R127i.z) + -(intBitsToFloat(R0i.w)));
R9i.x = int(intBitsToFloat(R125i.y));
PS0i = R9i.x;
// 13
R34i.xyz = ivec3(R1i.x,R1i.y,R1i.z);
// 14
R26i.xyz = ivec3(R12i.x,R12i.y,R12i.z);
// 15
R27i.xyz = ivec3(R6i.x,R6i.y,R6i.z);
// 16
R28i.xyz = ivec3(R13i.x,R13i.y,R13i.z);
// 17
R29i.xyz = ivec3(R14i.x,R14i.y,R14i.z);
// 18
R30i.xyz = ivec3(R7i.x,R7i.y,R7i.z);
// 19
R31i.xyz = ivec3(R5i.x,R5i.y,R5i.z);
// 20
tempResulti = R9i.x;
tempResulti = clamp(tempResulti, -256, 255);
ARi.x = tempResulti;
PV0i.x = tempResulti;
// 21
R5i.xyz = ivec3(((ARi.x==0)?R26i.x:(ARi.x==1)?R27i.x:(ARi.x==2)?R28i.x:(ARi.x==3)?R29i.x:(ARi.x==4)?R30i.x:(ARi.x==5)?R31i.x:(ARi.x==6)?R32i.x:(ARi.x==7)?R33i.x:(ARi.x==8)?R34i.x:(ARi.x==9)?R35i.x:(ARi.x==10)?R36i.x:(ARi.x==11)?R37i.x:(ARi.x==12)?R38i.x:(ARi.x==14)?R40i.x:(ARi.x==15)?R41i.x:(ARi.x==16)?R42i.x:(ARi.x==17)?R43i.x:(ARi.x==18)?R44i.x:(ARi.x==19)?R45i.x:(ARi.x==20)?R46i.x:(ARi.x==21)?R47i.x:(ARi.x==96)?R122i.x:(ARi.x==97)?R123i.x:(ARi.x==98)?R124i.x:(ARi.x==99)?R125i.x:(ARi.x==100)?R126i.x:(ARi.x==101)?R127i.x:0),((ARi.x==0)?R26i.y:(ARi.x==1)?R27i.y:(ARi.x==2)?R28i.y:(ARi.x==3)?R29i.y:(ARi.x==4)?R30i.y:(ARi.x==5)?R31i.y:(ARi.x==6)?R32i.y:(ARi.x==7)?R33i.y:(ARi.x==8)?R34i.y:(ARi.x==9)?R35i.y:(ARi.x==10)?R36i.y:(ARi.x==11)?R37i.y:(ARi.x==12)?R38i.y:(ARi.x==14)?R40i.y:(ARi.x==15)?R41i.y:(ARi.x==16)?R42i.y:(ARi.x==17)?R43i.y:(ARi.x==18)?R44i.y:(ARi.x==19)?R45i.y:(ARi.x==20)?R46i.y:(ARi.x==21)?R47i.y:(ARi.x==96)?R122i.y:(ARi.x==97)?R123i.y:(ARi.x==98)?R124i.y:(ARi.x==99)?R125i.y:(ARi.x==100)?R126i.y:(ARi.x==101)?R127i.y:0),((ARi.x==0)?R26i.z:(ARi.x==1)?R27i.z:(ARi.x==2)?R28i.z:(ARi.x==3)?R29i.z:(ARi.x==4)?R30i.z:(ARi.x==5)?R31i.z:(ARi.x==6)?R32i.z:(ARi.x==7)?R33i.z:(ARi.x==8)?R34i.z:(ARi.x==9)?R35i.z:(ARi.x==10)?R36i.z:(ARi.x==11)?R37i.z:(ARi.x==12)?R38i.z:(ARi.x==14)?R40i.z:(ARi.x==15)?R41i.z:(ARi.x==16)?R42i.z:(ARi.x==17)?R43i.z:(ARi.x==18)?R44i.z:(ARi.x==19)?R45i.z:(ARi.x==20)?R46i.z:(ARi.x==21)?R47i.z:(ARi.x==96)?R122i.z:(ARi.x==97)?R123i.z:(ARi.x==98)?R124i.z:(ARi.x==99)?R125i.z:(ARi.x==100)?R126i.z:(ARi.x==101)?R127i.z:0));
// 0
R7i.x = R17i.x;
R14i.y = R17i.x;
R7i.z = R17i.y;
R126i.w = floatBitsToInt(mul_nonIEEE(intBitsToFloat(R4i.w), intBitsToFloat(uf_remappedPS[0].y)));
PV0i.w = R126i.w;
PS0i = floatBitsToInt(1.0 / intBitsToFloat(R3i.w));
// 1
R126i.x = floatBitsToInt(mul_nonIEEE(intBitsToFloat(R9i.z), intBitsToFloat(PS0i)));
PV1i.x = R126i.x;
R125i.y = floatBitsToInt(mul_nonIEEE(intBitsToFloat(R1i.w), intBitsToFloat(PS0i)));
PV1i.y = R125i.y;
R127i.z = floatBitsToInt((mul_nonIEEE(-(intBitsToFloat(PV0i.w)),intBitsToFloat(R5i.x)) + intBitsToFloat(R5i.w)));
R125i.w = floatBitsToInt(mul_nonIEEE(intBitsToFloat(R2i.w), intBitsToFloat(PS0i)));
PV1i.w = R125i.w;
R126i.y = floatBitsToInt((mul_nonIEEE(-(intBitsToFloat(PV0i.w)),intBitsToFloat(R5i.y)) + intBitsToFloat(R5i.w)));
PS1i = R126i.y;
// 2
R127i.x = floatBitsToInt(floor(intBitsToFloat(PV1i.y)));
R127i.y = floatBitsToInt(floor(intBitsToFloat(PV1i.x)));
PV0i.z = floatBitsToInt(intBitsToFloat(PV1i.w) + 2.0);
PV0i.w = floatBitsToInt(intBitsToFloat(PV1i.y) + 4.0);
R125i.z = floatBitsToInt(floor(intBitsToFloat(PV1i.w)));
PS0i = R125i.z;
// 3
backupReg0i = R126i.w;
PV1i.x = floatBitsToInt(intBitsToFloat(R126i.x) + -(intBitsToFloat(R125i.w)));
PV1i.y = floatBitsToInt(-(intBitsToFloat(R125i.y)) + intBitsToFloat(PV0i.z));
PV1i.z = floatBitsToInt(-(intBitsToFloat(R126i.x)) + intBitsToFloat(PV0i.w));
R126i.w = floatBitsToInt((mul_nonIEEE(-(intBitsToFloat(backupReg0i)),intBitsToFloat(R5i.z)) + intBitsToFloat(R5i.w)));
R125i.w = floatBitsToInt(mul_nonIEEE(intBitsToFloat(R127i.z), intBitsToFloat(uf_remappedPS[0].z)));
R125i.w = clampFI32(R125i.w);
PS1i = R125i.w;
// 4
backupReg0i = R126i.y;
tempi.x = floatBitsToInt(dot(vec4(intBitsToFloat(R127i.x),intBitsToFloat(R127i.y),intBitsToFloat(R125i.z),intBitsToFloat(R16i.y)),vec4(intBitsToFloat(PV1i.x),intBitsToFloat(PV1i.y),intBitsToFloat(PV1i.z),intBitsToFloat(R16i.z))));
PV0i.x = tempi.x;
PV0i.y = tempi.x;
PV0i.z = tempi.x;
PV0i.w = tempi.x;
R126i.y = tempi.x;
R125i.z = floatBitsToInt(mul_nonIEEE(intBitsToFloat(backupReg0i), intBitsToFloat(uf_remappedPS[0].z)));
R125i.z = clampFI32(R125i.z);
PS0i = R125i.z;
// 5
PV1i.x = floatBitsToInt(intBitsToFloat(PV0i.x) + -(intBitsToFloat(0x40c00000)));
R127i.y = floatBitsToInt(mul_nonIEEE(intBitsToFloat(R126i.w), intBitsToFloat(uf_remappedPS[0].z)));
R127i.y = clampFI32(R127i.y);
R14i.z = R17i.y;
R2i.w = floatBitsToInt(max(intBitsToFloat(R15i.x), intBitsToFloat(0x3f36db6e)));
tempResultf = log2(intBitsToFloat(R125i.w));
if( isinf(tempResultf) == true ) tempResultf = -3.40282347E+38F;
PS1i = floatBitsToInt(tempResultf);
// 6
R127i.x = floatBitsToInt(mul_nonIEEE(intBitsToFloat(PS1i), intBitsToFloat(uf_remappedPS[0].w)));
R5i.y = R17i.x;
R9i.z = R17i.x;
R123i.w = floatBitsToInt((intBitsToFloat(PV1i.x) * intBitsToFloat(0x3e2aaaab) + 1.0));
PV0i.w = R123i.w;
tempResultf = log2(intBitsToFloat(R125i.z));
if( isinf(tempResultf) == true ) tempResultf = -3.40282347E+38F;
PS0i = floatBitsToInt(tempResultf);
// 7
R126i.x = floatBitsToInt(mul_nonIEEE(intBitsToFloat(PS0i), intBitsToFloat(uf_remappedPS[0].w)));
R13i.y = R17i.y;
PV1i.z = floatBitsToInt(floor(intBitsToFloat(PV0i.w)));
R126i.w = floatBitsToInt(min(intBitsToFloat(R6i.w), intBitsToFloat(0x3f36db6e)));
tempResultf = log2(intBitsToFloat(R127i.y));
if( isinf(tempResultf) == true ) tempResultf = -3.40282347E+38F;
PS1i = floatBitsToInt(tempResultf);
// 8
backupReg0i = R126i.y;
backupReg1i = R127i.x;
R127i.x = floatBitsToInt(mul_nonIEEE(intBitsToFloat(PS1i), intBitsToFloat(uf_remappedPS[0].w)));
R126i.y = floatBitsToInt((-(intBitsToFloat(PV1i.z)) * intBitsToFloat(0x40c00000) + intBitsToFloat(backupReg0i)));
PV0i.y = R126i.y;
R13i.z = R17i.x;
R125i.w = 0x3f36db6e;
PS0i = floatBitsToInt(exp2(intBitsToFloat(backupReg1i)));
// 9
PV1i.x = floatBitsToInt(max(intBitsToFloat(PS0i), 0.0));
R6i.y = R17i.y;
R11i.z = floatBitsToInt(intBitsToFloat(R2i.w) + -(intBitsToFloat(R126i.w)));
R126i.w = floatBitsToInt(floor(intBitsToFloat(PV0i.y)));
PV1i.w = R126i.w;
PS1i = floatBitsToInt(exp2(intBitsToFloat(R126i.x)));
// 10
R3i.x = floatBitsToInt(min(intBitsToFloat(PV1i.x), 1.0));
R4i.y = floatBitsToInt(intBitsToFloat(R0i.x) + -(intBitsToFloat(R2i.w)));
PV0i.z = floatBitsToInt(max(intBitsToFloat(PS1i), 0.0));
PV0i.w = floatBitsToInt(intBitsToFloat(R126i.y) + -(intBitsToFloat(PV1i.w)));
PS0i = floatBitsToInt(exp2(intBitsToFloat(R127i.x)));
// 11
R127i.x = floatBitsToInt(-(intBitsToFloat(PV0i.w)) + 1.0);
PV1i.x = R127i.x;
R3i.y = floatBitsToInt(min(intBitsToFloat(PV0i.z), 1.0));
R125i.z = PV0i.w;
PV1i.z = R125i.z;
PV1i.w = floatBitsToInt(max(intBitsToFloat(PS0i), 0.0));
R5i.x = R17i.y;
PS1i = R5i.x;
// 12
R14i.x = PV1i.z;
R7i.y = PV1i.x;
R3i.z = floatBitsToInt(min(intBitsToFloat(PV1i.w), 1.0));
R5i.w = floatBitsToInt(intBitsToFloat(R125i.w) + -(intBitsToFloat(R2i.w)));
R5i.z = PV1i.x;
PS0i = R5i.z;
// 13
R9i.x = R17i.y;
R9i.y = R125i.z;
R6i.z = R125i.z;
R1i.w = floatBitsToInt(intBitsToFloat(R0i.y) + -(intBitsToFloat(R2i.w)));
R13i.x = R127i.x;
PS1i = R13i.x;
// 14
R6i.x = R17i.x;
R12i.y = floatBitsToInt(mul_nonIEEE(intBitsToFloat(R3i.w), intBitsToFloat(uf_remappedPS[0].y)));
R8i.z = R17i.y;
R3i.w = floatBitsToInt(max(intBitsToFloat(R15i.x), intBitsToFloat(0x3f5b6db7)));
R12i.x = int(intBitsToFloat(R126i.w));
PS0i = R12i.x;
// 15
R35i.xyz = ivec3(R3i.x,R3i.y,R3i.z);
// 16
R26i.xyz = ivec3(R7i.x,R7i.y,R7i.z);
// 17
R27i.xyz = ivec3(R14i.x,R14i.y,R14i.z);
// 18
R28i.xyz = ivec3(R5i.x,R5i.y,R5i.z);
// 19
R29i.xyz = ivec3(R9i.x,R9i.y,R9i.z);
// 20
R30i.xyz = ivec3(R13i.x,R13i.y,R13i.z);
// 21
R31i.xyz = ivec3(R6i.x,R6i.y,R6i.z);
// 22
tempResulti = R12i.x;
tempResulti = clamp(tempResulti, -256, 255);
ARi.x = tempResulti;
PV0i.x = tempResulti;
// 23
R6i.xyz = ivec3(((ARi.x==0)?R26i.x:(ARi.x==1)?R27i.x:(ARi.x==2)?R28i.x:(ARi.x==3)?R29i.x:(ARi.x==4)?R30i.x:(ARi.x==5)?R31i.x:(ARi.x==6)?R32i.x:(ARi.x==7)?R33i.x:(ARi.x==8)?R34i.x:(ARi.x==9)?R35i.x:(ARi.x==10)?R36i.x:(ARi.x==11)?R37i.x:(ARi.x==12)?R38i.x:(ARi.x==14)?R40i.x:(ARi.x==15)?R41i.x:(ARi.x==16)?R42i.x:(ARi.x==17)?R43i.x:(ARi.x==18)?R44i.x:(ARi.x==19)?R45i.x:(ARi.x==20)?R46i.x:(ARi.x==21)?R47i.x:(ARi.x==96)?R122i.x:(ARi.x==97)?R123i.x:(ARi.x==98)?R124i.x:(ARi.x==99)?R125i.x:(ARi.x==100)?R126i.x:(ARi.x==101)?R127i.x:0),((ARi.x==0)?R26i.y:(ARi.x==1)?R27i.y:(ARi.x==2)?R28i.y:(ARi.x==3)?R29i.y:(ARi.x==4)?R30i.y:(ARi.x==5)?R31i.y:(ARi.x==6)?R32i.y:(ARi.x==7)?R33i.y:(ARi.x==8)?R34i.y:(ARi.x==9)?R35i.y:(ARi.x==10)?R36i.y:(ARi.x==11)?R37i.y:(ARi.x==12)?R38i.y:(ARi.x==14)?R40i.y:(ARi.x==15)?R41i.y:(ARi.x==16)?R42i.y:(ARi.x==17)?R43i.y:(ARi.x==18)?R44i.y:(ARi.x==19)?R45i.y:(ARi.x==20)?R46i.y:(ARi.x==21)?R47i.y:(ARi.x==96)?R122i.y:(ARi.x==97)?R123i.y:(ARi.x==98)?R124i.y:(ARi.x==99)?R125i.y:(ARi.x==100)?R126i.y:(ARi.x==101)?R127i.y:0),((ARi.x==0)?R26i.z:(ARi.x==1)?R27i.z:(ARi.x==2)?R28i.z:(ARi.x==3)?R29i.z:(ARi.x==4)?R30i.z:(ARi.x==5)?R31i.z:(ARi.x==6)?R32i.z:(ARi.x==7)?R33i.z:(ARi.x==8)?R34i.z:(ARi.x==9)?R35i.z:(ARi.x==10)?R36i.z:(ARi.x==11)?R37i.z:(ARi.x==12)?R38i.z:(ARi.x==14)?R40i.z:(ARi.x==15)?R41i.z:(ARi.x==16)?R42i.z:(ARi.x==17)?R43i.z:(ARi.x==18)?R44i.z:(ARi.x==19)?R45i.z:(ARi.x==20)?R46i.z:(ARi.x==21)?R47i.z:(ARi.x==96)?R122i.z:(ARi.x==97)?R123i.z:(ARi.x==98)?R124i.z:(ARi.x==99)?R125i.z:(ARi.x==100)?R126i.z:(ARi.x==101)?R127i.z:0));
// 0
R8i.x = R17i.x;
R123i.y = floatBitsToInt((mul_nonIEEE(-(intBitsToFloat(R12i.y)),intBitsToFloat(R6i.y)) + intBitsToFloat(R0i.w)));
PV0i.y = R123i.y;
R123i.z = floatBitsToInt((mul_nonIEEE(-(intBitsToFloat(R12i.y)),intBitsToFloat(R6i.x)) + intBitsToFloat(R0i.w)));
PV0i.z = R123i.z;
R125i.w = floatBitsToInt((mul_nonIEEE(-(intBitsToFloat(R12i.y)),intBitsToFloat(R6i.z)) + intBitsToFloat(R0i.w)));
PS0i = floatBitsToInt(1.0 / intBitsToFloat(R11i.z));
// 1
R127i.x = floatBitsToInt(mul_nonIEEE(intBitsToFloat(R1i.w), intBitsToFloat(PS0i)));
PV1i.x = R127i.x;
R126i.y = floatBitsToInt(mul_nonIEEE(intBitsToFloat(R4i.y), intBitsToFloat(PS0i)));
PV1i.y = R126i.y;
R125i.z = floatBitsToInt(mul_nonIEEE(intBitsToFloat(PV0i.z), intBitsToFloat(uf_remappedPS[0].z)));
R125i.z = clampFI32(R125i.z);
R126i.w = floatBitsToInt(mul_nonIEEE(intBitsToFloat(R5i.w), intBitsToFloat(PS0i)));
PV1i.w = R126i.w;
R126i.z = floatBitsToInt(mul_nonIEEE(intBitsToFloat(PV0i.y), intBitsToFloat(uf_remappedPS[0].z)));
R126i.z = clampFI32(R126i.z);
PS1i = R126i.z;
// 2
R126i.x = floatBitsToInt(floor(intBitsToFloat(PV1i.y)));
R127i.y = floatBitsToInt(floor(intBitsToFloat(PV1i.x)));
PV0i.z = floatBitsToInt(intBitsToFloat(PV1i.w) + 2.0);
PV0i.w = floatBitsToInt(intBitsToFloat(PV1i.y) + 4.0);
R127i.z = floatBitsToInt(floor(intBitsToFloat(PV1i.w)));
PS0i = R127i.z;
// 3
PV1i.x = floatBitsToInt(intBitsToFloat(R127i.x) + -(intBitsToFloat(R126i.w)));
PV1i.y = floatBitsToInt(-(intBitsToFloat(R126i.y)) + intBitsToFloat(PV0i.z));
PV1i.z = floatBitsToInt(-(intBitsToFloat(R127i.x)) + intBitsToFloat(PV0i.w));
R126i.w = floatBitsToInt(mul_nonIEEE(intBitsToFloat(R125i.w), intBitsToFloat(uf_remappedPS[0].z)));
R126i.w = clampFI32(R126i.w);
tempResultf = log2(intBitsToFloat(R125i.z));
if( isinf(tempResultf) == true ) tempResultf = -3.40282347E+38F;
R125i.w = floatBitsToInt(tempResultf);
PS1i = R125i.w;
// 4
backupReg0i = R127i.y;
tempi.x = floatBitsToInt(dot(vec4(intBitsToFloat(R126i.x),intBitsToFloat(backupReg0i),intBitsToFloat(R127i.z),intBitsToFloat(R16i.y)),vec4(intBitsToFloat(PV1i.x),intBitsToFloat(PV1i.y),intBitsToFloat(PV1i.z),intBitsToFloat(R16i.z))));
PV0i.x = tempi.x;
PV0i.y = tempi.x;
PV0i.z = tempi.x;
PV0i.w = tempi.x;
R127i.y = tempi.x;
tempResultf = log2(intBitsToFloat(R126i.z));
if( isinf(tempResultf) == true ) tempResultf = -3.40282347E+38F;
PS0i = floatBitsToInt(tempResultf);
// 5
backupReg0i = R126i.w;
PV1i.x = floatBitsToInt(intBitsToFloat(PV0i.x) + -(intBitsToFloat(0x40c00000)));
PV1i.y = floatBitsToInt(mul_nonIEEE(intBitsToFloat(R125i.w), intBitsToFloat(uf_remappedPS[0].w)));
R4i.z = R17i.y;
R126i.w = floatBitsToInt(mul_nonIEEE(intBitsToFloat(PS0i), intBitsToFloat(uf_remappedPS[0].w)));
tempResultf = log2(intBitsToFloat(backupReg0i));
if( isinf(tempResultf) == true ) tempResultf = -3.40282347E+38F;
PS1i = floatBitsToInt(tempResultf);
// 6
R6i.x = R17i.y;
R126i.y = floatBitsToInt(mul_nonIEEE(intBitsToFloat(PS1i), intBitsToFloat(uf_remappedPS[0].w)));
R12i.z = R17i.x;
R123i.w = floatBitsToInt((intBitsToFloat(PV1i.x) * intBitsToFloat(0x3e2aaaab) + 1.0));
PV0i.w = R123i.w;
PS0i = floatBitsToInt(exp2(intBitsToFloat(PV1i.y)));
// 7
PV1i.x = floatBitsToInt(max(intBitsToFloat(PS0i), 0.0));
R4i.y = R17i.x;
PV1i.z = floatBitsToInt(floor(intBitsToFloat(PV0i.w)));
R125i.w = floatBitsToInt(min(intBitsToFloat(R6i.w), intBitsToFloat(0x3f5b6db7)));
PS1i = floatBitsToInt(exp2(intBitsToFloat(R126i.w)));
// 8
backupReg0i = R127i.y;
R10i.x = floatBitsToInt(min(intBitsToFloat(PV1i.x), 1.0));
R127i.y = floatBitsToInt((-(intBitsToFloat(PV1i.z)) * intBitsToFloat(0x40c00000) + intBitsToFloat(backupReg0i)));
PV0i.y = R127i.y;
PV0i.z = floatBitsToInt(max(intBitsToFloat(PS1i), 0.0));
R124i.w = 0x3f5b6db7;
PS0i = floatBitsToInt(exp2(intBitsToFloat(R126i.y)));
// 9
PV1i.x = floatBitsToInt(max(intBitsToFloat(PS0i), 0.0));
R10i.y = floatBitsToInt(min(intBitsToFloat(PV0i.z), 1.0));
R13i.z = R17i.x;
R126i.w = floatBitsToInt(floor(intBitsToFloat(PV0i.y)));
PV1i.w = R126i.w;
R6i.y = R17i.x;
PS1i = R6i.y;
// 10
R12i.x = R17i.y;
R13i.y = R17i.y;
R10i.z = floatBitsToInt(min(intBitsToFloat(PV1i.x), 1.0));
PV0i.w = floatBitsToInt(intBitsToFloat(R127i.y) + -(intBitsToFloat(PV1i.w)));
R9i.x = R17i.x;
PS0i = R9i.x;
// 11
backupReg0i = R126i.w;
R126i.x = PV0i.w;
PV1i.x = R126i.x;
R9i.y = R17i.y;
R7i.z = floatBitsToInt(intBitsToFloat(R3i.w) + -(intBitsToFloat(R125i.w)));
R126i.w = floatBitsToInt(-(intBitsToFloat(PV0i.w)) + 1.0);
PV1i.w = R126i.w;
R5i.x = int(intBitsToFloat(backupReg0i));
PS1i = R5i.x;
// 12
R4i.x = PV1i.x;
R8i.y = PV1i.w;
R6i.z = PV1i.w;
R1i.w = floatBitsToInt(intBitsToFloat(R0i.x) + -(intBitsToFloat(R3i.w)));
R12i.y = PV1i.x;
PS0i = R12i.y;
// 13
R13i.x = R126i.w;
R5i.y = floatBitsToInt(intBitsToFloat(R124i.w) + -(intBitsToFloat(R3i.w)));
R9i.z = R126i.x;
R5i.w = floatBitsToInt(intBitsToFloat(R0i.y) + -(intBitsToFloat(R3i.w)));
R14i.y = floatBitsToInt(1.0 / intBitsToFloat(R7i.z));
PS1i = R14i.y;
// 14
R36i.xyz = ivec3(R10i.x,R10i.y,R10i.z);
// 15
R26i.xyz = ivec3(R8i.x,R8i.y,R8i.z);
// 16
R27i.xyz = ivec3(R4i.x,R4i.y,R4i.z);
// 17
R28i.xyz = ivec3(R6i.x,R6i.y,R6i.z);
// 18
R29i.xyz = ivec3(R12i.x,R12i.y,R12i.z);
// 19
R30i.xyz = ivec3(R13i.x,R13i.y,R13i.z);
// 20
R31i.xyz = ivec3(R9i.x,R9i.y,R9i.z);
// 21
tempResulti = R5i.x;
tempResulti = clamp(tempResulti, -256, 255);
ARi.x = tempResulti;
PV1i.x = tempResulti;
// 22
R9i.xyz = ivec3(((ARi.x==0)?R26i.x:(ARi.x==1)?R27i.x:(ARi.x==2)?R28i.x:(ARi.x==3)?R29i.x:(ARi.x==4)?R30i.x:(ARi.x==5)?R31i.x:(ARi.x==6)?R32i.x:(ARi.x==7)?R33i.x:(ARi.x==8)?R34i.x:(ARi.x==9)?R35i.x:(ARi.x==10)?R36i.x:(ARi.x==11)?R37i.x:(ARi.x==12)?R38i.x:(ARi.x==14)?R40i.x:(ARi.x==15)?R41i.x:(ARi.x==16)?R42i.x:(ARi.x==17)?R43i.x:(ARi.x==18)?R44i.x:(ARi.x==19)?R45i.x:(ARi.x==20)?R46i.x:(ARi.x==21)?R47i.x:(ARi.x==96)?R122i.x:(ARi.x==97)?R123i.x:(ARi.x==98)?R124i.x:(ARi.x==99)?R125i.x:(ARi.x==100)?R126i.x:(ARi.x==101)?R127i.x:0),((ARi.x==0)?R26i.y:(ARi.x==1)?R27i.y:(ARi.x==2)?R28i.y:(ARi.x==3)?R29i.y:(ARi.x==4)?R30i.y:(ARi.x==5)?R31i.y:(ARi.x==6)?R32i.y:(ARi.x==7)?R33i.y:(ARi.x==8)?R34i.y:(ARi.x==9)?R35i.y:(ARi.x==10)?R36i.y:(ARi.x==11)?R37i.y:(ARi.x==12)?R38i.y:(ARi.x==14)?R40i.y:(ARi.x==15)?R41i.y:(ARi.x==16)?R42i.y:(ARi.x==17)?R43i.y:(ARi.x==18)?R44i.y:(ARi.x==19)?R45i.y:(ARi.x==20)?R46i.y:(ARi.x==21)?R47i.y:(ARi.x==96)?R122i.y:(ARi.x==97)?R123i.y:(ARi.x==98)?R124i.y:(ARi.x==99)?R125i.y:(ARi.x==100)?R126i.y:(ARi.x==101)?R127i.y:0),((ARi.x==0)?R26i.z:(ARi.x==1)?R27i.z:(ARi.x==2)?R28i.z:(ARi.x==3)?R29i.z:(ARi.x==4)?R30i.z:(ARi.x==5)?R31i.z:(ARi.x==6)?R32i.z:(ARi.x==7)?R33i.z:(ARi.x==8)?R34i.z:(ARi.x==9)?R35i.z:(ARi.x==10)?R36i.z:(ARi.x==11)?R37i.z:(ARi.x==12)?R38i.z:(ARi.x==14)?R40i.z:(ARi.x==15)?R41i.z:(ARi.x==16)?R42i.z:(ARi.x==17)?R43i.z:(ARi.x==18)?R44i.z:(ARi.x==19)?R45i.z:(ARi.x==20)?R46i.z:(ARi.x==21)?R47i.z:(ARi.x==96)?R122i.z:(ARi.x==97)?R123i.z:(ARi.x==98)?R124i.z:(ARi.x==99)?R125i.z:(ARi.x==100)?R126i.z:(ARi.x==101)?R127i.z:0));
// 0
R126i.x = floatBitsToInt(mul_nonIEEE(intBitsToFloat(R1i.w), intBitsToFloat(R14i.y)));
PV0i.x = R126i.x;
R126i.y = floatBitsToInt(mul_nonIEEE(intBitsToFloat(R11i.z), intBitsToFloat(uf_remappedPS[0].y)));
R127i.z = floatBitsToInt(mul_nonIEEE(intBitsToFloat(R5i.y), intBitsToFloat(R14i.y)));
PV0i.z = R127i.z;
R126i.w = floatBitsToInt(mul_nonIEEE(intBitsToFloat(R5i.w), intBitsToFloat(R14i.y)));
PV0i.w = R126i.w;
R5i.x = R17i.x;
PS0i = R5i.x;
// 1
R127i.x = floatBitsToInt(floor(intBitsToFloat(PV0i.x)));
PV1i.y = floatBitsToInt(intBitsToFloat(PV0i.z) + 2.0);
R126i.z = floatBitsToInt(floor(intBitsToFloat(PV0i.z)));
PV1i.w = floatBitsToInt(intBitsToFloat(PV0i.x) + 4.0);
R127i.y = floatBitsToInt(floor(intBitsToFloat(PV0i.w)));
PS1i = R127i.y;
// 2
PV0i.x = floatBitsToInt(intBitsToFloat(R126i.w) + -(intBitsToFloat(R127i.z)));
PV0i.y = floatBitsToInt(-(intBitsToFloat(R126i.x)) + intBitsToFloat(PV1i.y));
PV0i.z = floatBitsToInt(-(intBitsToFloat(R126i.w)) + intBitsToFloat(PV1i.w));
R126i.w = floatBitsToInt((mul_nonIEEE(-(intBitsToFloat(R126i.y)),intBitsToFloat(R9i.x)) + intBitsToFloat(R2i.w)));
R126i.x = floatBitsToInt((mul_nonIEEE(-(intBitsToFloat(R126i.y)),intBitsToFloat(R9i.y)) + intBitsToFloat(R2i.w)));
PS0i = R126i.x;
// 3
backupReg0i = R127i.x;
R127i.x = floatBitsToInt(dot(vec4(intBitsToFloat(backupReg0i),intBitsToFloat(R127i.y),intBitsToFloat(R126i.z),intBitsToFloat(R16i.y)),vec4(intBitsToFloat(PV0i.x),intBitsToFloat(PV0i.y),intBitsToFloat(PV0i.z),intBitsToFloat(R16i.z))));
PV1i.x = R127i.x;
PV1i.y = R127i.x;
PV1i.z = R127i.x;
PV1i.w = R127i.x;
R122i.x = floatBitsToInt((mul_nonIEEE(-(intBitsToFloat(R126i.y)),intBitsToFloat(R9i.z)) + intBitsToFloat(R2i.w)));
PS1i = R122i.x;
// 4
backupReg0i = R126i.x;
R126i.x = floatBitsToInt(mul_nonIEEE(intBitsToFloat(PS1i), intBitsToFloat(uf_remappedPS[0].z)));
R126i.x = clampFI32(R126i.x);
R127i.y = floatBitsToInt(mul_nonIEEE(intBitsToFloat(backupReg0i), intBitsToFloat(uf_remappedPS[0].z)));
R127i.y = clampFI32(R127i.y);
PV0i.z = floatBitsToInt(mul_nonIEEE(intBitsToFloat(R126i.w), intBitsToFloat(uf_remappedPS[0].z)));
PV0i.z = clampFI32(PV0i.z);
PV0i.w = floatBitsToInt(intBitsToFloat(PV1i.x) + -(intBitsToFloat(0x40c00000)));
R5i.z = R17i.y;
PS0i = R5i.z;
// 5
R9i.x = R17i.y;
R15i.y = R17i.x;
R123i.z = floatBitsToInt((intBitsToFloat(PV0i.w) * intBitsToFloat(0x3e2aaaab) + 1.0));
PV1i.z = R123i.z;
R2i.w = floatBitsToInt(max(intBitsToFloat(R15i.x), 1.0));
tempResultf = log2(intBitsToFloat(PV0i.z));
if( isinf(tempResultf) == true ) tempResultf = -3.40282347E+38F;
PS1i = floatBitsToInt(tempResultf);
// 6
R11i.x = R17i.y;
PV0i.y = floatBitsToInt(floor(intBitsToFloat(PV1i.z)));
R126i.z = floatBitsToInt(mul_nonIEEE(intBitsToFloat(PS1i), intBitsToFloat(uf_remappedPS[0].w)));
R125i.w = floatBitsToInt(min(intBitsToFloat(R6i.w), 1.0));
tempResultf = log2(intBitsToFloat(R127i.y));
if( isinf(tempResultf) == true ) tempResultf = -3.40282347E+38F;
PS0i = floatBitsToInt(tempResultf);
// 7
backupReg0i = R127i.x;
R127i.x = floatBitsToInt((-(intBitsToFloat(PV0i.y)) * intBitsToFloat(0x40c00000) + intBitsToFloat(backupReg0i)));
PV1i.x = R127i.x;
R9i.y = R17i.x;
R15i.z = R17i.y;
R126i.w = floatBitsToInt(mul_nonIEEE(intBitsToFloat(PS0i), intBitsToFloat(uf_remappedPS[0].w)));
tempResultf = log2(intBitsToFloat(R126i.x));
if( isinf(tempResultf) == true ) tempResultf = -3.40282347E+38F;
PS1i = floatBitsToInt(tempResultf);
// 8
R126i.x = floatBitsToInt(mul_nonIEEE(intBitsToFloat(PS1i), intBitsToFloat(uf_remappedPS[0].w)));
R14i.y = R17i.y;
R11i.z = R17i.x;
R124i.w = floatBitsToInt(floor(intBitsToFloat(PV1i.x)));
PV0i.w = R124i.w;
PS0i = floatBitsToInt(exp2(intBitsToFloat(R126i.z)));
// 9
R13i.x = R17i.x;
R13i.y = R17i.y;
PV1i.z = floatBitsToInt(max(intBitsToFloat(PS0i), 0.0));
PV1i.w = floatBitsToInt(intBitsToFloat(R127i.x) + -(intBitsToFloat(PV0i.w)));
PS1i = floatBitsToInt(exp2(intBitsToFloat(R126i.w)));
// 10
R4i.x = floatBitsToInt(min(intBitsToFloat(PV1i.z), 1.0));
PV0i.y = floatBitsToInt(max(intBitsToFloat(PS1i), 0.0));
R126i.z = PV1i.w;
PV0i.z = R126i.z;
R126i.w = floatBitsToInt(-(intBitsToFloat(PV1i.w)) + 1.0);
PV0i.w = R126i.w;
PS0i = floatBitsToInt(exp2(intBitsToFloat(R126i.x)));
// 11
R15i.x = PV0i.z;
R4i.y = floatBitsToInt(min(intBitsToFloat(PV0i.y), 1.0));
R9i.z = PV0i.w;
PV1i.w = floatBitsToInt(max(intBitsToFloat(PS0i), 0.0));
R5i.y = PV0i.w;
PS1i = R5i.y;
// 12
R14i.x = R126i.w;
R11i.y = R126i.z;
R4i.z = floatBitsToInt(min(intBitsToFloat(PV1i.w), 1.0));
PV0i.w = 0x3f800000;
R14i.z = R17i.x;
PS0i = R14i.z;
// 13
R6i.x = floatBitsToInt(intBitsToFloat(R0i.x) + -(intBitsToFloat(R2i.w)));
R6i.y = floatBitsToInt(intBitsToFloat(R2i.w) + -(intBitsToFloat(R125i.w)));
R13i.z = R126i.z;
R6i.w = floatBitsToInt(intBitsToFloat(PV0i.w) + -(intBitsToFloat(R2i.w)));
R12i.x = int(intBitsToFloat(R124i.w));
PS1i = R12i.x;
// 14
R37i.xyz = ivec3(R4i.x,R4i.y,R4i.z);
// 15
R26i.xyz = ivec3(R5i.x,R5i.y,R5i.z);
// 16
R27i.xyz = ivec3(R15i.x,R15i.y,R15i.z);
// 17
R28i.xyz = ivec3(R9i.x,R9i.y,R9i.z);
// 18
R29i.xyz = ivec3(R11i.x,R11i.y,R11i.z);
// 19
R30i.xyz = ivec3(R14i.x,R14i.y,R14i.z);
// 20
R31i.xyz = ivec3(R13i.x,R13i.y,R13i.z);
// 21
tempResulti = R12i.x;
tempResulti = clamp(tempResulti, -256, 255);
ARi.x = tempResulti;
PV1i.x = tempResulti;
// 22
R12i.xyz = ivec3(((ARi.x==0)?R26i.x:(ARi.x==1)?R27i.x:(ARi.x==2)?R28i.x:(ARi.x==3)?R29i.x:(ARi.x==4)?R30i.x:(ARi.x==5)?R31i.x:(ARi.x==6)?R32i.x:(ARi.x==7)?R33i.x:(ARi.x==8)?R34i.x:(ARi.x==9)?R35i.x:(ARi.x==10)?R36i.x:(ARi.x==11)?R37i.x:(ARi.x==12)?R38i.x:(ARi.x==14)?R40i.x:(ARi.x==15)?R41i.x:(ARi.x==16)?R42i.x:(ARi.x==17)?R43i.x:(ARi.x==18)?R44i.x:(ARi.x==19)?R45i.x:(ARi.x==20)?R46i.x:(ARi.x==21)?R47i.x:(ARi.x==96)?R122i.x:(ARi.x==97)?R123i.x:(ARi.x==98)?R124i.x:(ARi.x==99)?R125i.x:(ARi.x==100)?R126i.x:(ARi.x==101)?R127i.x:0),((ARi.x==0)?R26i.y:(ARi.x==1)?R27i.y:(ARi.x==2)?R28i.y:(ARi.x==3)?R29i.y:(ARi.x==4)?R30i.y:(ARi.x==5)?R31i.y:(ARi.x==6)?R32i.y:(ARi.x==7)?R33i.y:(ARi.x==8)?R34i.y:(ARi.x==9)?R35i.y:(ARi.x==10)?R36i.y:(ARi.x==11)?R37i.y:(ARi.x==12)?R38i.y:(ARi.x==14)?R40i.y:(ARi.x==15)?R41i.y:(ARi.x==16)?R42i.y:(ARi.x==17)?R43i.y:(ARi.x==18)?R44i.y:(ARi.x==19)?R45i.y:(ARi.x==20)?R46i.y:(ARi.x==21)?R47i.y:(ARi.x==96)?R122i.y:(ARi.x==97)?R123i.y:(ARi.x==98)?R124i.y:(ARi.x==99)?R125i.y:(ARi.x==100)?R126i.y:(ARi.x==101)?R127i.y:0),((ARi.x==0)?R26i.z:(ARi.x==1)?R27i.z:(ARi.x==2)?R28i.z:(ARi.x==3)?R29i.z:(ARi.x==4)?R30i.z:(ARi.x==5)?R31i.z:(ARi.x==6)?R32i.z:(ARi.x==7)?R33i.z:(ARi.x==8)?R34i.z:(ARi.x==9)?R35i.z:(ARi.x==10)?R36i.z:(ARi.x==11)?R37i.z:(ARi.x==12)?R38i.z:(ARi.x==14)?R40i.z:(ARi.x==15)?R41i.z:(ARi.x==16)?R42i.z:(ARi.x==17)?R43i.z:(ARi.x==18)?R44i.z:(ARi.x==19)?R45i.z:(ARi.x==20)?R46i.z:(ARi.x==21)?R47i.z:(ARi.x==96)?R122i.z:(ARi.x==97)?R123i.z:(ARi.x==98)?R124i.z:(ARi.x==99)?R125i.z:(ARi.x==100)?R126i.z:(ARi.x==101)?R127i.z:0));
// 0
R0i.x = R17i.x;
R7i.y = R17i.x;
R127i.z = floatBitsToInt(mul_nonIEEE(intBitsToFloat(R7i.z), intBitsToFloat(uf_remappedPS[0].y)));
PV0i.z = R127i.z;
PV0i.w = floatBitsToInt(intBitsToFloat(R0i.y) + -(intBitsToFloat(R2i.w)));
PS0i = floatBitsToInt(1.0 / intBitsToFloat(R6i.y));
// 1
R126i.x = floatBitsToInt(mul_nonIEEE(intBitsToFloat(R6i.x), intBitsToFloat(PS0i)));
PV1i.x = R126i.x;
R127i.y = floatBitsToInt((mul_nonIEEE(-(intBitsToFloat(PV0i.z)),intBitsToFloat(R12i.x)) + intBitsToFloat(R3i.w)));
R126i.z = floatBitsToInt(mul_nonIEEE(intBitsToFloat(R6i.w), intBitsToFloat(PS0i)));
PV1i.z = R126i.z;
R125i.w = floatBitsToInt(mul_nonIEEE(intBitsToFloat(PV0i.w), intBitsToFloat(PS0i)));
PV1i.w = R125i.w;
R124i.w = floatBitsToInt((mul_nonIEEE(-(intBitsToFloat(PV0i.z)),intBitsToFloat(R12i.y)) + intBitsToFloat(R3i.w)));
PS1i = R124i.w;
// 2
R127i.x = floatBitsToInt(floor(intBitsToFloat(PV1i.x)));
PV0i.y = floatBitsToInt(intBitsToFloat(PV1i.z) + 2.0);
R125i.z = floatBitsToInt(floor(intBitsToFloat(PV1i.z)));
PV0i.w = floatBitsToInt(intBitsToFloat(PV1i.x) + 4.0);
R126i.y = floatBitsToInt(floor(intBitsToFloat(PV1i.w)));
PS0i = R126i.y;
// 3
PV1i.x = floatBitsToInt(intBitsToFloat(R125i.w) + -(intBitsToFloat(R126i.z)));
PV1i.y = floatBitsToInt(-(intBitsToFloat(R126i.x)) + intBitsToFloat(PV0i.y));
PV1i.z = floatBitsToInt(-(intBitsToFloat(R125i.w)) + intBitsToFloat(PV0i.w));
R125i.w = floatBitsToInt((mul_nonIEEE(-(intBitsToFloat(R127i.z)),intBitsToFloat(R12i.z)) + intBitsToFloat(R3i.w)));
R127i.z = floatBitsToInt(mul_nonIEEE(intBitsToFloat(R127i.y), intBitsToFloat(uf_remappedPS[0].z)));
R127i.z = clampFI32(R127i.z);
PS1i = R127i.z;
// 4
R126i.x = floatBitsToInt(dot(vec4(intBitsToFloat(R127i.x),intBitsToFloat(R126i.y),intBitsToFloat(R125i.z),intBitsToFloat(R16i.y)),vec4(intBitsToFloat(PV1i.x),intBitsToFloat(PV1i.y),intBitsToFloat(PV1i.z),intBitsToFloat(R16i.z))));
PV0i.x = R126i.x;
PV0i.y = R126i.x;
PV0i.z = R126i.x;
PV0i.w = R126i.x;
R126i.y = floatBitsToInt(mul_nonIEEE(intBitsToFloat(R124i.w), intBitsToFloat(uf_remappedPS[0].z)));
R126i.y = clampFI32(R126i.y);
PS0i = R126i.y;
// 5
R127i.x = floatBitsToInt(mul_nonIEEE(intBitsToFloat(R125i.w), intBitsToFloat(uf_remappedPS[0].z)));
R127i.x = clampFI32(R127i.x);
R16i.y = R17i.x;
R0i.z = R17i.y;
PV1i.w = floatBitsToInt(intBitsToFloat(PV0i.x) + -(intBitsToFloat(0x40c00000)));
tempResultf = log2(intBitsToFloat(R127i.z));
if( isinf(tempResultf) == true ) tempResultf = -3.40282347E+38F;
PS1i = floatBitsToInt(tempResultf);
// 6
R125i.x = floatBitsToInt(mul_nonIEEE(intBitsToFloat(PS1i), intBitsToFloat(uf_remappedPS[0].w)));
R12i.y = R17i.y;
R123i.z = floatBitsToInt((intBitsToFloat(PV1i.w) * intBitsToFloat(0x3e2aaaab) + 1.0));
PV0i.z = R123i.z;
R3i.w = floatBitsToInt(mul_nonIEEE(intBitsToFloat(R6i.y), intBitsToFloat(uf_remappedPS[0].y)));
tempResultf = log2(intBitsToFloat(R126i.y));
if( isinf(tempResultf) == true ) tempResultf = -3.40282347E+38F;
PS0i = floatBitsToInt(tempResultf);
// 7
backupReg0i = R127i.x;
R127i.x = floatBitsToInt(mul_nonIEEE(intBitsToFloat(PS0i), intBitsToFloat(uf_remappedPS[0].w)));
PV1i.y = floatBitsToInt(floor(intBitsToFloat(PV0i.z)));
R7i.z = R17i.y;
tempResultf = log2(intBitsToFloat(backupReg0i));
if( isinf(tempResultf) == true ) tempResultf = -3.40282347E+38F;
PS1i = floatBitsToInt(tempResultf);
// 8
backupReg0i = R126i.x;
R126i.x = floatBitsToInt(mul_nonIEEE(intBitsToFloat(PS1i), intBitsToFloat(uf_remappedPS[0].w)));
R13i.y = R17i.y;
R6i.z = R17i.x;
R125i.w = floatBitsToInt((-(intBitsToFloat(PV1i.y)) * intBitsToFloat(0x40c00000) + intBitsToFloat(backupReg0i)));
PV0i.w = R125i.w;
PS0i = floatBitsToInt(exp2(intBitsToFloat(R125i.x)));
// 9
PV1i.x = floatBitsToInt(max(intBitsToFloat(PS0i), 0.0));
R125i.z = floatBitsToInt(floor(intBitsToFloat(PV0i.w)));
PV1i.z = R125i.z;
PS1i = floatBitsToInt(exp2(intBitsToFloat(R127i.x)));
// 10
R14i.x = floatBitsToInt(min(intBitsToFloat(PV1i.x), 1.0));
PV0i.y = floatBitsToInt(max(intBitsToFloat(PS1i), 0.0));
R12i.z = R17i.x;
PV0i.w = floatBitsToInt(intBitsToFloat(R125i.w) + -(intBitsToFloat(PV1i.z)));
PS0i = floatBitsToInt(exp2(intBitsToFloat(R126i.x)));
// 11
R126i.x = floatBitsToInt(-(intBitsToFloat(PV0i.w)) + 1.0);
PV1i.x = R126i.x;
R14i.y = floatBitsToInt(min(intBitsToFloat(PV0i.y), 1.0));
R127i.z = PV0i.w;
PV1i.z = R127i.z;
PV1i.w = floatBitsToInt(max(intBitsToFloat(PS0i), 0.0));
R16i.x = R17i.y;
PS1i = R16i.x;
// 12
R7i.x = PV1i.z;
R0i.y = PV1i.x;
R14i.z = floatBitsToInt(min(intBitsToFloat(PV1i.w), 1.0));
R16i.z = PV1i.x;
PS0i = R16i.z;
// 13
R6i.x = R17i.y;
R6i.y = R127i.z;
R13i.z = R127i.z;
R12i.x = R126i.x;
PS1i = R12i.x;
// 14
R13i.x = R17i.x;
R17i.x = int(intBitsToFloat(R125i.z));
PS0i = R17i.x;
// 15
R38i.xyz = ivec3(R14i.x,R14i.y,R14i.z);
// 16
R26i.xyz = ivec3(R0i.x,R0i.y,R0i.z);
// 17
R27i.xyz = ivec3(R7i.x,R7i.y,R7i.z);
// 18
R28i.xyz = ivec3(R16i.x,R16i.y,R16i.z);
// 19
R29i.xyz = ivec3(R6i.x,R6i.y,R6i.z);
// 20
R30i.xyz = ivec3(R12i.x,R12i.y,R12i.z);
// 21
R31i.xyz = ivec3(R13i.x,R13i.y,R13i.z);
// 22
tempResulti = R17i.x;
tempResulti = clamp(tempResulti, -256, 255);
ARi.x = tempResulti;
PV0i.x = tempResulti;
// 23
R17i.xyz = ivec3(((ARi.x==0)?R26i.x:(ARi.x==1)?R27i.x:(ARi.x==2)?R28i.x:(ARi.x==3)?R29i.x:(ARi.x==4)?R30i.x:(ARi.x==5)?R31i.x:(ARi.x==6)?R32i.x:(ARi.x==7)?R33i.x:(ARi.x==8)?R34i.x:(ARi.x==9)?R35i.x:(ARi.x==10)?R36i.x:(ARi.x==11)?R37i.x:(ARi.x==12)?R38i.x:(ARi.x==14)?R40i.x:(ARi.x==15)?R41i.x:(ARi.x==16)?R42i.x:(ARi.x==17)?R43i.x:(ARi.x==18)?R44i.x:(ARi.x==19)?R45i.x:(ARi.x==20)?R46i.x:(ARi.x==21)?R47i.x:(ARi.x==96)?R122i.x:(ARi.x==97)?R123i.x:(ARi.x==98)?R124i.x:(ARi.x==99)?R125i.x:(ARi.x==100)?R126i.x:(ARi.x==101)?R127i.x:0),((ARi.x==0)?R26i.y:(ARi.x==1)?R27i.y:(ARi.x==2)?R28i.y:(ARi.x==3)?R29i.y:(ARi.x==4)?R30i.y:(ARi.x==5)?R31i.y:(ARi.x==6)?R32i.y:(ARi.x==7)?R33i.y:(ARi.x==8)?R34i.y:(ARi.x==9)?R35i.y:(ARi.x==10)?R36i.y:(ARi.x==11)?R37i.y:(ARi.x==12)?R38i.y:(ARi.x==14)?R40i.y:(ARi.x==15)?R41i.y:(ARi.x==16)?R42i.y:(ARi.x==17)?R43i.y:(ARi.x==18)?R44i.y:(ARi.x==19)?R45i.y:(ARi.x==20)?R46i.y:(ARi.x==21)?R47i.y:(ARi.x==96)?R122i.y:(ARi.x==97)?R123i.y:(ARi.x==98)?R124i.y:(ARi.x==99)?R125i.y:(ARi.x==100)?R126i.y:(ARi.x==101)?R127i.y:0),((ARi.x==0)?R26i.z:(ARi.x==1)?R27i.z:(ARi.x==2)?R28i.z:(ARi.x==3)?R29i.z:(ARi.x==4)?R30i.z:(ARi.x==5)?R31i.z:(ARi.x==6)?R32i.z:(ARi.x==7)?R33i.z:(ARi.x==8)?R34i.z:(ARi.x==9)?R35i.z:(ARi.x==10)?R36i.z:(ARi.x==11)?R37i.z:(ARi.x==12)?R38i.z:(ARi.x==14)?R40i.z:(ARi.x==15)?R41i.z:(ARi.x==16)?R42i.z:(ARi.x==17)?R43i.z:(ARi.x==18)?R44i.z:(ARi.x==19)?R45i.z:(ARi.x==20)?R46i.z:(ARi.x==21)?R47i.z:(ARi.x==96)?R122i.z:(ARi.x==97)?R123i.z:(ARi.x==98)?R124i.z:(ARi.x==99)?R125i.z:(ARi.x==100)?R126i.z:(ARi.x==101)?R127i.z:0));
// 0
R123i.x = floatBitsToInt((mul_nonIEEE(-(intBitsToFloat(R3i.w)),intBitsToFloat(R17i.x)) + intBitsToFloat(R2i.w)));
PV0i.x = R123i.x;
R123i.z = floatBitsToInt((mul_nonIEEE(-(intBitsToFloat(R3i.w)),intBitsToFloat(R17i.z)) + intBitsToFloat(R2i.w)));
PV0i.z = R123i.z;
R123i.w = floatBitsToInt((mul_nonIEEE(-(intBitsToFloat(R3i.w)),intBitsToFloat(R17i.y)) + intBitsToFloat(R2i.w)));
PV0i.w = R123i.w;
// 1
R126i.x = floatBitsToInt(mul_nonIEEE(intBitsToFloat(PV0i.w), intBitsToFloat(uf_remappedPS[0].z)));
R126i.x = clampFI32(R126i.x);
PV1i.y = floatBitsToInt(mul_nonIEEE(intBitsToFloat(PV0i.x), intBitsToFloat(uf_remappedPS[0].z)));
PV1i.y = clampFI32(PV1i.y);
R125i.w = floatBitsToInt(mul_nonIEEE(intBitsToFloat(PV0i.z), intBitsToFloat(uf_remappedPS[0].z)));
R125i.w = clampFI32(R125i.w);
// 2
tempResultf = log2(intBitsToFloat(PV1i.y));
if( isinf(tempResultf) == true ) tempResultf = -3.40282347E+38F;
PS0i = floatBitsToInt(tempResultf);
// 3
R126i.y = floatBitsToInt(mul_nonIEEE(intBitsToFloat(PS0i), intBitsToFloat(uf_remappedPS[0].w)));
tempResultf = log2(intBitsToFloat(R126i.x));
if( isinf(tempResultf) == true ) tempResultf = -3.40282347E+38F;
PS1i = floatBitsToInt(tempResultf);
// 4
R125i.z = floatBitsToInt(mul_nonIEEE(intBitsToFloat(PS1i), intBitsToFloat(uf_remappedPS[0].w)));
tempResultf = log2(intBitsToFloat(R125i.w));
if( isinf(tempResultf) == true ) tempResultf = -3.40282347E+38F;
PS0i = floatBitsToInt(tempResultf);
// 5
R125i.w = floatBitsToInt(mul_nonIEEE(intBitsToFloat(PS0i), intBitsToFloat(uf_remappedPS[0].w)));
PS1i = floatBitsToInt(exp2(intBitsToFloat(R126i.y)));
// 6
PV0i.y = floatBitsToInt(max(intBitsToFloat(PS1i), 0.0));
PS0i = floatBitsToInt(exp2(intBitsToFloat(R125i.z)));
// 7
PV1i.x = floatBitsToInt(max(intBitsToFloat(PS0i), 0.0));
R2i.w = floatBitsToInt(min(intBitsToFloat(PV0i.y), 1.0));
PS1i = floatBitsToInt(exp2(intBitsToFloat(R125i.w)));
// 8
R2i.y = floatBitsToInt(min(intBitsToFloat(PV1i.x), 1.0));
PV0i.w = floatBitsToInt(max(intBitsToFloat(PS1i), 0.0));
// 9
R2i.z = floatBitsToInt(min(intBitsToFloat(PV0i.w), 1.0));
PV1i.z = R2i.z;
// 10
R47i.xyz = ivec3(R2i.w,R2i.y,PV1i.z);
R47i.w = R2i.w;
// 11
R46i.xyz = ivec3(R14i.x,R14i.y,R14i.z);
R46i.w = R14i.w;
// 12
R45i.xyz = ivec3(R4i.x,R4i.y,R4i.z);
R45i.w = R4i.w;
// 13
R44i.xyz = ivec3(R10i.x,R10i.y,R10i.z);
R44i.w = R10i.w;
// 14
R43i.xyz = ivec3(R3i.x,R3i.y,R3i.z);
R43i.w = R3i.w;
// 15
R42i.xyz = ivec3(R1i.x,R1i.y,R1i.z);
R42i.w = R1i.w;
// 16
R41i.xyz = ivec3(R18i.x,R18i.y,R18i.z);
R41i.w = R18i.w;
// 17
R40i.xyz = ivec3(R19i.x,R19i.y,R19i.z);
R40i.w = R19i.w;
// export
passPixelColor0 = vec4(intBitsToFloat(R40i.x), intBitsToFloat(R40i.y), intBitsToFloat(R40i.z), intBitsToFloat(R40i.w));
passPixelColor1 = vec4(intBitsToFloat(R41i.x), intBitsToFloat(R41i.y), intBitsToFloat(R41i.z), intBitsToFloat(R41i.w));
passPixelColor2 = vec4(intBitsToFloat(R42i.x), intBitsToFloat(R42i.y), intBitsToFloat(R42i.z), intBitsToFloat(R42i.w));
passPixelColor3 = vec4(intBitsToFloat(R43i.x), intBitsToFloat(R43i.y), intBitsToFloat(R43i.z), intBitsToFloat(R43i.w));
passPixelColor4 = vec4(intBitsToFloat(R44i.x), intBitsToFloat(R44i.y), intBitsToFloat(R44i.z), intBitsToFloat(R44i.w));
passPixelColor5 = vec4(intBitsToFloat(R45i.x), intBitsToFloat(R45i.y), intBitsToFloat(R45i.z), intBitsToFloat(R45i.w));
passPixelColor6 = vec4(intBitsToFloat(R46i.x), intBitsToFloat(R46i.y), intBitsToFloat(R46i.z), intBitsToFloat(R46i.w));
passPixelColor7 = vec4(intBitsToFloat(R47i.x), intBitsToFloat(R47i.y), intBitsToFloat(R47i.z), intBitsToFloat(R47i.w));
}
